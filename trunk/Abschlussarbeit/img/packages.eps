%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: packages.pdf
%%Creator: Adobe Acrobat 8.0
%%For: DerRM
%%CreationDate: 21.02.2011, 15:33:09
%%BoundingBox: -1 0 394 261
%%HiResBoundingBox: 0 0 393.4340 260.8090
%%CropBox: 0 0 393.4340 260.8090
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4282 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xap:CreateDate="2011-02-21T15:32:13+01:00"
   xap:CreatorTool="PScript5.dll Version 5.2.2"
   xap:ModifyDate="2011-02-21T15:32:32+01:00"
   xap:MetadataDate="2011-02-21T15:32:32+01:00"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   xapMM:DocumentID="uuid:de191a3c-efc7-4837-925d-1dcc62de1bd1"
   xapMM:InstanceID="uuid:f154156a-9fbd-4c39-8804-bff3fa19ef95">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>DerRM</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">uml_portal</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -260.809 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 260.809 li
393.434 260.809 li
393.434 0 li
cp
clp
[1 0 0 1 -133.895 0 ]ct
.059998 764.202 mo
595.02 764.202 li
595.02 -77.3583 li
.059998 -77.3583 li
cp
false sop
/1 
[/DeviceGray] /CSA add_res
1 gry
f
gsave
0 -77.398 mo
595.02 -77.398 li
595.02 764.262 li
0 764.262 li
cp
clp
.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
595.38 -77.418 mo
0 -77.418 li
0 764.202 li
595.38 764.202 li
cp
0 gry
@
grestore
518.34 21.942 mo
142.56 21.942 li
142.56 252.282 li
518.34 252.282 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.75294 .74902 .75294 colr
ef
.72 lw
1 lc
0 lj
10 ml
[] 0 dsh
false sadj
518.34 21.942 mo
142.56 21.942 li
142.56 252.282 li
518.34 252.282 li
cp
@
218.1 8.98199 mo
142.56 8.98199 li
142.56 22.602 li
218.1 22.602 li
cp
ef
218.1 8.98199 mo
142.56 8.98199 li
142.56 22.602 li
218.1 22.602 li
cp
@
516.18 19.782 mo
140.4 19.782 li
140.4 250.122 li
516.18 250.122 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
516.18 19.782 mo
140.4 19.782 li
140.4 250.122 li
516.18 250.122 li
cp
0 gry
@
215.94 6.82196 mo
140.4 6.82196 li
140.4 20.442 li
215.94 20.442 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
215.94 6.82196 mo
140.4 6.82196 li
140.4 20.442 li
215.94 20.442 li
cp
0 gry
@
178.56 19.062 mo
214.56 19.062 li
214.56 8.26196 li
178.56 8.26196 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/0 
<<
/ShadingType 2 
/BBox [178.56 745.52 214.56 756.32 ] 
/ColorSpace /0 /CSA get_res
/Coords [178.56 756.32 214.56 756.32 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qsi\>m+q0nfB_DDjkIu~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bq>'j^q>'j^q>'j]q"XXZq"XXZq"XUXp\4FVp\4FVp\+=Sp@e4Rp@e4Rp%A"Np%A"N
p%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>naZ,<nF5r:nF5r:nF5o8
n*f`6n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.mHs<.mHs9,m-O**m-O**m-O'(lg*m&lg*m&lg*j$lK[["
lK[["lK[Wul07Hsl07Hsl07Eqkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggk2k^djlPUcjlPUc
~>
<~nF5r:nF5r:nF5r:n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.mHj3+m-O**m-O**lg*m&lg*m&
lg*m%lK[["lK[["lK[[!l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkND!ik2tggk2tggk2tde
jlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWio8tWio8qUiSibSiSibSiSi_Qi8EPO
i8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;
~>
<~iSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?
gt^]>gY:K;gY:K;gY:K:g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)
f%/F'f%/F'f%/C%e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@h
dF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa_\cHXVYc-=MXc-=MXc-4DUbfn;Tbfn;T
~>
]
>>
178.56 756.32 214.56 756.32 [178.56 745.52 214.56 756.32 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
0 gry
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32115d5e9f000000cc000000606376
7420fb3ea3da0000012c0000075a6670676d08e8ba2800000888000005d7
676c79664fc39cd400009edc0007c44c68656164d65e5fe200000e600000
003668686561127e15fe00000e9800000024686d7478d62bc37500000ebc
000034d46c6f636132ab8c4800004390000034d86d61787014dc04760000
7868000000206e616d65ae0c9081000078880000147d70726570f14ae516
00008d08000011d267646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002affc00078430000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200004
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440000404154403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0c05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8023623701020b802364520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b0035158b00425b00425012046b0106048
2046b0106048590a21211b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b8fff060482046b8fff060
48590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b5323
4b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b212159
2d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab902a702a78a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b202010243604259b1
2401885158b920000040885458b202020243604259b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b2021002436042595959592d00000100000005028f9f18
7df95f0f3cf50819080000000000a2e33c1d00000000c14fd725fafafcfd
1000081500010009000100010000000000010000073efe4e00431000fafa
fa7a1000000100000000000000000000000000000d350600010000000000
023900000239000002aa00b803cb00700473001204730046071d005905c7
005a01e7005c02aa006b02aa0043031d001c04ac00550239007502aa0073
023900930239fffd04730056047300a2047300330473004d047300260473
005b0473005704730057047300530473004102aa00c902aa00aa04ac005f
04ac005504ac005f04e3006a07cd003d05c7000005c7009605c7006105c7
00940556009504e300970639006205c700960239008c0473002305c70099
04e3009d06aa009105c7009806390059055600950639005905c700960556
004a04e3002c05c700930556ffff078d0007055600000556fffd04e30016
02aa00920239fffd02aa002604ac00730473ffed02aa002a0473004904e3
00870473005504e300540473004102aa001804e3005404e3009202390093
0239ffa20473008902390093071d007e04e3009104e3005204e3008b04e3
005b031d00870473003002aa001f04e3008d0473000b063900090473000c
0473000e04000022031d003c023d00b0031d002d04ac004305c7000005c7
000005c700610556009505c700980639005905c700930473004904730049
047300490473004904730049047300490473005504730041047300410473
004104730041023900920239ffe90239ffcd0239ffd004e3009104e30052
04e3005204e3005204e3005204e3005204e3008d04e3008d04e3008d04e3
008d0473004403330056047300540473000d0473003b02cd00420473fffe
04e3008b05e5fff705e5fff7080000d802aa00bb02aa0005046400310800
ffaa0639003f05b40098046400320464003c0464003c04730001049c006f
03f4002c05b4007a069600a1046400000231000002f6002502ec001a0625
0037071d005804e3005704e3006502aa00c304ac0055046400540473ffec
0464001f04e5001a047300600473006a080000c905c7000005c700000639
005908000048078d00580473fffc08000000040000840400006902390098
023900720464003103f4002f0473000e0556fff70156fea90473ffe002aa
004b02aa004b04e3001f04e3001f04730044023900930239007504000071
0800000105c700000556009505c7000005560095055600950239006a0239
ffae0239ffbf0239ffc106390059063900590639005905c7009305c70093
05c700930239009302aa000302aafff302aa001302aa001a02aa00cd02aa
009102aa002602aa006002aa003902aa000304e3000a0239000a0556004a
0473003004e3001604000022023d00b005c7fffd04e300530556fff70473
000e0556009504e3008b04ac005504ac006d02aa005b02aa001902aa0028
06ac005c06ac005c06ac0028047300000639006204e300540239008c0556
004a0473003005c700610473005505c700610473005504e30054046bffed
02aa00c805c700000473004905c700000473004905c7009405c0005105c7
fffd0556009504730041055600950473004104e3009d0239007904e3009d
0315009504e3009a03d5009005c7009804e3009105c7009804e300910639
005904e3005205c70096031d008705c70096031d00500556004a04730030
04e3002c02aa001f04e3002c03d5001e05c7009304e3008d05c7009304e3
008d04e300160400002204e300160400002204cf009a0639005606910056
04eb004e04da004e03cc004e0579004e0392003005b9004e046bffed04d5
00b8032b004f08c000290800004f040000990800004f040000990800004f
040000980400009807d5016a05c7008f04ab005504d5009d04ac005504d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
04000025060000550647008c0473009005abffc701eb008d03d500860715
002303e9001804d5009202d6005c02d6005c04d500b202d6004d05c70000
0473004905c700610473005505c700610473005505560095047300410556
00950473004105560095047300410639006204e300540639006204e30054
0639006204e3005405c7009604e3009205c7000504e300190239ffba0239
ffbb0239ffda0239ffda0239ffe10239ffe2023900480239004704730023
0239ffa205c70099047300890473008d04e3009d0239ffed05c7009804e3
009105c9009c04e3008e0639005904e300520639005904e3005205c70096
031d002a0556004a0473003004e3002c02aa000705c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d078d000706390009
0556fffd0473000e0239008d05c70000047300490800ffaa071d00580639
003f04e3005702aa00c9078d000706390009078d000706390009078d0007
063900090556fffd0473000e0239009502aaffd70473000d04cd005a06ac
005c06ac002906ac003006ac002f02aa00bc02aa002602aa00bb03b8fff4
05c7ffe806d3ffbb073fffbb03caffbb0699ffa6076bffc806b4ff9c0239
ff2905c7000005c7009605c000000556009504e3001605c700960239008c
05c700990556000006aa009105c70098052600660639005905c7009a0556
009504cd005a04e3002c0556fffd0556000006790056066a00620239ffcc
0556ffff04eb004e039c004e04e3008e0239008204a8006c04e200900473
000f03af004e04e3008e0453004e023900930476008e0473000f04e50090
0473000b0390004e04e3005204f300760429004e04a80076049b00110607
007606c2004e0239ffcd04a8007604e3004e04a8007606c2004e055a0097
0715002f048900a405b100580556004a0239008c0235ffca0473002308c0
001a0880009d0700003704e2009a04fa000005c0009905c7000005c0009b
05c70096048900a405b3fffa05560095073b00170503002c05c0009905c0
009904e2009a059d002006aa009105c700960639005905c0009905560095
05c7006104e3002c04fa000006d400590556000005d8009a059f007d080a
009a0827009a06f5001a07d5009d05c0009b05b100570840009605c00004
0473004904f1005c04eb0096035500880514fff90473004105acffff03fa
001804eb008c04eb008c040100880515001905eb009b04d5008804e30052
04d5008804e3008b0473005503eb00150473000e070000540473000c04eb
008904a5007206ab008c06c0008d05d5002806d5009504eb0099046b0038
06d5009104abfffb0473004504e3000003550088046b0051047300300239
00930240ffd00239ffa207c000180740008c04e300000401008804730012
04d5008803e50096039300880800004108eb00a306200030000001010000
001e0000003100000031000001010000007f0000007e0000008c0000008c
000001010000001000000101000001210393007d0000008c026500c80000
03020000ff0102aa00c904a90059049b004103a7000a0466003204ea0082
022f0087034e005a04ed00870503007d022f0087042c002803ed004b03f8
004104e30087050a0037022f00870316004b04e800500459000a04c00064
04b2006403ff000a0418000a04950082042c002805b8005a0563002d045e
0087045e0087045e00870236005004090050068b0087022fffac042c0028
042c002803f8ff1603f8ff160479003205b8005a05b8005a05b8005a05b8
005a04a9005904a9005904a90059049b004103a2000a0466003204ea0082
02950000038100000503007d02950000042c002803ed004b03f80041050a
00370316004b04e8005004c0006404b200640418000a04950082042c0028
05b8005a0563002d022f0087049b004103ed004b04b2006404db00410000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da004303c0007e
0196ffba0000004600000046000000460000004600000048000000460000
004600000046047e0188047e0150047e0104047e009e047e012d047e00ea
047e00d5047e009c047e00bc047e00ee04350085028d00c1043500b30600
01000600010002be005806000100047e00a5047e00bd047e00de06000100
060001000600010006000100060001000000004606000100060001000600
0100060001000600010006000100060001000600010004e6ffba06000100
06000100060001000532003905320039022cffba022cffba060001000600
01000600010006000100049e0034047800300430ffba0430ffba0376000a
0376000a060e00290708002902e2ffba0456ffba060e00290708002902e2
ffba0456ffba05280097046f000a03520003060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000300000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473002d080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d007f028d00670600
010005a0002e03c0007e01e800000207ffc301bc005e01e0fffa039c0006
039c000601bc005e01e0001a05280097049e0011022cffba022cffba01bc
008801e0001a0532003905320039022cffba022cffba02be003603520003
0532003905320039022cffba022cffba0532003c0532003c022cffba022c
ffba049e0034047800300430ffba0430ffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba02be006902be006902be
006902be00690376000a0376000a0376000a0376000a0732004007320040
04deffba04deffba073200400732004004deffba04deffba088000400880
0040062cffba062cffba0880004008800040062cffba062cffba0430ffba
0430ffba0430ffba0430ffba0430ffba0430ffba0430ffba0430ffba0454
003403c000460454ffba02e2ffba0454003403c000460454ffba02e2ffba
0610002f0610002f0270ffba0298ffba04e6002704e600270270ffba0298
ffba045400290454002902e2ffba02e2ffba039c0023039c002301e0ffba
01e0ffba02e2002102e200210352ffba0352ffba0454003e0454003e022c
ffba022cffba02be00580352000303c0ffba039cffba039c0006039c0006
05280097046f000a05280097049e0011022cffba022cffba0454000004c4
000003e400220454001a03e400220454001a03e400220454001a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000030060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010002be0069
0100ffba0800ffba1000ffbb06d3005905b0005206a3009305cb008d0000
fd880000fbc10000fc5f0000fe310000fcad0000fd550000fe260000fdf1
0000fd180000fc690000fd950000fbe00000fc700000fed40000fecd0000
fea0041b007806ac005c06ac00190000fe450000fd550000fda60000fc5f
0000fe250000fd180000fbe00000fafa0000fb360000fc700000fb870000
fb9b0000fcce0000fc540000fbc30000fc940000fbf50000fdb00000fe59
0000fd7e0000fc820000fd340000fe500000fe460000fcd10000fd3e0000
fd020000fc3a0000fce90000fc260000fc070000fc2f0000fb9e0000fb76
0239009305c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
05c700000473004905c700000473004905c700000473004905c700000473
004905c70000047300490556009504730041055600950473004105560095
047300410556009504730041055600950473004105560095047300410556
00950473004105560095047300410239006a0239005d0239008c02390093
0639005904e300520639005904e300520639005904e300520639005904e3
00520639005904e300520639005904e300520639005904e3005206d30059
05b0005206d3005905b0005206d3005905b0005206d3005905b0005206d3
005905b0005205c7009304e3008d05c7009304e3008d06a3009305cb008d
06a3009305cb008d06a3009305cb008d06a3009305cb008d06a3009305cb
008d0556fffd0473000e0556fffd0473000e0556fffd0473000e05c70000
047300490239ffca0239ffca0639005904e3005205c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d05c7009304e3008d
0000fef90000fef90000fef40000feef0489fffd03550007073b001705ac
ffff04e2009a0401008804e2009a0401008805c7009604d5008804730001
047300120473000104730012055600000473000c059f007d04a50072059f
009c04e3009205cf00590473004c0639005604e3005205320039022cffba
0270ffba0298ffba04e60027022c0065022c0016022c0016022c0011022c
0043022cffd20000fef00000000f0000fff502aa009002aa009000000000
0000005e0000005e0000ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc
001d01e0000901bc008801e0001a039c0006039c0006039c0006039c0006
05280097046f000a0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
049e0034047800300430ffba0430ffba049e0034047800300430ffba0430
ffba049e0034047800300430ffba0430ffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba02be004f02be004f02be006902be006902be006902be0069
02be004f02be004f02be006602be006602be006902be006902be006902be
006902be002f02be002f02be002202be00220376000a0376000a0376000a
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0732004007320040
04deffba04deffba073200400732004004deffba04deffba073200400732
004004deffba04deffba0880004008800040062cffba062cffba08800040
08800040062cffba062cffba0430ffba0430ffba0454003403c000460454
ffba02e2ffba0610002f0610002f0610002f0270ffba0298ffba0610002f
0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
04e6002704e6002704e6002704e60027093e0032093e00320740ffba0740
ffba060e00290708002902e2ffba0456ffba045400290454002902e2ffba
02e2ffba045400290454002902e2ffba02e2ffba045400290454002902e2
ffba02e2ffba060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba060e00290708002902e2ffba0456ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba039c0023
039c002301e0ffba01e0ffba039c0023039c002301e0ffb101e0ffb1039c
0023039c002301e0ffba01e0ffba039c0023039c002301e0ffba01e0ffba
0454003e0454003e022cffba022cffba0454003e0454003e0454003e0454
003e0454003e0454003e022cffba022cffba0454003e0454003e049e0034
047800300430ffba0430ffba02be005803520003031a001a031a001a031a
001a039c0006039c0006039c0006039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c000605280042046fffd905280097046f000a022cffba022cffba
039c0006039c000605280097046f000a022cffba022cffba05280097046f
000a067f0044067f0045067f0044067f004501a800280000fe290000fe8c
0000ff250000ff230000fefa0000ff7a0000fe5908fc003208ad00320000
ffb50000ffb60000fef00000ff590000fe590000ff8c01b4000002f70000
0000fe850000ff0704cd00320000ff580000ff580000ff59073200400732
004004deffba04deffba0880004008800040062cffba062cffba04540034
03c000460454ffba02e2ffba03c0007e02e2002102be0058022cffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d060e002907080029
022f00870000fec803500000045e008703e4fff50454fff503e400220454
001a03e400220454001a03e400220454001a03e400220454001a03e40022
0454001a03e400220454001a047e0072047e00bd03e4000f0454000f04e3
001b06b1001e05c0009b04e3008705c0000a04e3000a05c7006905c70061
0473005505c7fffd06b3001e05c0005c04e3005404da004e055600660503
006f04e3ffac063900620518000207720092023900930239000705c70099
047300890239001b0473000f07ef009605c7ffad04e3008e063900560718
005905f300550641001e04e3008b05560095055600640473006304cd005a
02e1001e02aa001f04e3001802aa001f04e3002d066a006205c700930629
00000473000e04e300160400002204e3003a04e300590436002a04360039
047300330473005b03fa001e04a2001f04e3008b023d00b003fb00b004ad
005602aa00b80aaa009409c7009408e300540956009d071c009d04720093
0a3a009808000098071c00910473004c05c70000047300490000fefe05c7
0000047300490800ffaa071d00580639006204e300240639006204e30054
05c70099047300890639005904e300520639005904e3005204e3003a0436
00220239ffa20aaa009409c7009408e300540639006204e3005408430096
0552009505c7009804e3009105c700000473004905c70000047300490556
00950473004105560095047300410239ff370239ff2d0239fff40239ffe6
0639005904e300520639005904e3005205c70096031dffcd05c70096031d
008005c7009304e3006705c7009304e3008d0556004a0473003004e3002c
02aa001f049e002e0429004905c7009604e30092059f009c050c0052050c
005204e300160400002205c7000004730049055600950473004106390059
04e300520000fefd0639005904e300520639005904e300520639005904e3
00520556fffd0473000e0473004504e3005404e3008204e3008704730034
0473001404e3005404e300540473004c0641004c03fa004f03fa00180587
0018048a005202aaffc404e3005404e3005404b000520473000f04ce000f
04e3008a04e3009204e300920239001b023900930239009302a8000002d9
00140239009304d40093071d0085071d0085071d007e04e3ffa604e30091
04eb008c04e3005206ab005206c2004e05ff0052031dffe6031dffe6031d
ffe6031d0087031d0087031d0087031dffe604ab008a04ab008a04730030
02aaffc402aaffc402aaff9b0451001e02aa001902aa001f04e3001b04f8
004904a8009104730012063900090473000f0491000f0400002205700022
0436002204360022047300420473005504730042047300550639005904eb
0096048a004f04b0005204d5008803ab001e04730014039e008804e3005b
0473004204730055083f00540789005409af00540682001f0446001f0698
001f06f4001806350093058a00930445001e0482008802f1003202f10032
018effe202040032020400000204000003000032042f000002e2000001e7
005c03cb007002390098023900750239009402aa00f302aa00f303000032
0300003204ac005f04ac005f04ac002a04ac002a02aa012102aa00bb02aa
002a02aa012102aa001302aa002a02aa00bb02aa00ca02aa00ca02aa00f3
02aa00f302aa00a602aa00a602aa00a602aa001302aaffe102aafffb02ed
0000012100320302003202ee000003000032031000960310009603100096
031000960310009602aa006202aa006202aa000302aa001d040000690457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000feaf0000febf0000fdb5
0000fec80000ff780000feb10000ff3d0000fe6f0000feae0000ffce0000
ff660000fe6f0000fec80000fec80000ff680000ff680000ff6800000000
0000ff1f0000ff1f0000ff440000ff5f0000fe870000ffec0000ff9c0000
ff510000ff510000ff510000febf0000ff15000000000000feb10000ff3d
0000ff6b0000fef20000ff470000ffce0000fe870000febb0000feae0000
feae0000fec80000fec80000fea60000febf0000fdb70000fdb90000fea6
0000febf0000fdb50000fe1f0000fee20000ff9c0000fe870000ff440000
feba0000ff230000ff9a0000fdb90000fe3b000000000000fea70000ff68
0000fe170000ff740000fe870000fdb90000ff660000ff440000fea70000
fea70000fea70000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb10000feb00000ffa10000fe8c0000feb80000feaf0000fea20000
feba0000fdf40000ff190000ff2d0000fe8c0000fe8802aa00bb02aa002a
02aa00c804e2009004a8007606290000080200000629000005ff005206c2
004e056900140639005904e3005205c700610473005504e30097039e0088
06030000043c001d066f000a04e2000a07ef0096071d0085059f007d04e3
008a059f009c04d7000a05560064055600640524001404d4000a05e10055
04a0004b040e0014038400280569001404f1005c047300550239ffa20639
005603d4005103d400510556009505c000990473004104eb008c0a3d0059
063a001406f4001a059f001b07ce008c065e0093055600000473000b0768
008c066700930679005606070076089e008c07d800930503004603fa0043
06790056060700760639005604e300520685ffff052c000b0685ffff052c
000b0b3a005909bd005206840055051a004b0a3d0059073500550000fe37
0a3d0059063a001405c700610473005504ac000f0000fea60000feb10000
feaa0000fead0000fc2b0000fc4c05c0009904eb008c05c0001104eb001b
0556009504e3008b059f009c04c900880503002c03fa001804e200110401
000d0617001a04fc00280709009605b6008809020099075f008805c70061
049f005505c700610473005504e3002d03eb001506d2002c05830015059f
007d04a5007206da000a056d000a06da000a056d000a0239008c073b0017
05acffff059d009a04c80088059d00200515001905c7009604d5008805c7
009604d50088059f007d04a5007206aa009105eb009b02aa001a05c70000
0473004905c70000047300490800ffaa071d0058055600950473004105cf
00590473004c073b001705acffff0503002c03fa00180503002c04360022
05c0009904eb008c05c0009904eb008c0639005904e300520639005604e3
005205b10057046b003804fa00000473000e04fa00000473000e04fa0000
0473000e059f007d04a5007207d5009d06d5009505c0005e04e30054083e
005e077a005407ad004606c4004305430046044a0043081a002007a50019
08430096076600880639006204b000520620002d059b00150000ff430000
fec90000ff770000ffb00000ff470000ff560000ff740000fed70000feac
000000000000ff520000ff56000000000000feac0000fd9a000000000000
ff6a0000ff7c0000ff690000ff560000feac0000ff7f0000ff560000fdef
0000ff430000ff690000ff7c000000000000fdae0000ff8c000001020000
feef0000feef0000fefd0000fef90000ff530000fef80000fef905c70000
0473004905c7009604e3008705c7009604e3008705c7009604e3008705c7
00610473005505c7009404e3005405c7009404e3005405c7009404e30054
05c7009404e3005405c7009404e300540556009504730041055600950473
004105560095047300410556009504730041055600950473004104e30097
02aa00180639006204e3005405c7009604e3009205c7009604e3009205c7
009604e3009205c7004e04e3003b05c7009604e300920239ffd20239ffd2
0239001b0239ffce05c700990473008905c700990473008905c700990473
008904e3009d0239009304e3009d0239ffeb04e3009d0239ffdd04e3009d
0239ffcb06aa0091071d007e06aa0091071d007e06aa0091071d007e05c7
009804e3009105c7009804e3009105c7009804e3009105c7009804e30091
0639005904e300520639005904e300520639005904e300520639005904e3
00520556009504e3008b0556009504e3008b05c70096031d008705c70096
031d008705c70096031d008705c70096031d00590556004a047300300556
004a047300300556004a047300300556004a047300300556004a04730030
04e3002c02aa001f04e3002c02aa001f04e3002c02aa001f04e3002c02aa
001f05c7009304e3008d05c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d0556ffff0473000b0556ffff0473000b078d
000706390009078d000706390009055600000473000c055600000473000c
0556fffd0473000e04e300160400002204e300160400002204e300160400
002204e3009202aaffde063900090473000e047300490239008d04eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7
000005c7000006f3fff206f3000006f3fff206f3000006f3004306f30043
03cc004e03cc004e03cc004e03cc004e03cc004e03cc004e061efff2061e
000007aefff207ae000007aefff207ae000004e3008e04e3008e04e3008e
04e3008e04e3008e04e3008e04e3008e04e3008e068ffff2068f0000081f
fff2081f0000081ffff2081f0000081f0014081f00140239009002390090
0239ffb60239ffc40239ffde0239ffec0239ffb30239ffc00301fff20301
00000491fff2049100000491fff204910000049100140491001404e30052
04e3005204e3005204e3005204e3005204e30052069dfff2069d00000855
fff20855000007c9fff207c9000004a8007604a8007604a8007604a80076
04a8007604a8007604a8007604a800760682000007fe00000862000007ae
fff306c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e
06c2004e06cefff206ce00000886fff20886000007fafff207fa000007fa
fff307fafff304eb004e04eb004e03cc004e03cc004e04e3008e04e3008e
0239ffe70239008d04e3005204e3005204a8007604a8007606c2004e06c2
004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
04eb004e05c7000005c7000006f3fff206f3000006f3fff206f3000006f3
004306f3004304e3008c04e3008c04e3008c04e3008c04e3008c04e3008c
04e3008c04e3008c068ffff2068f0000081ffff2081f0000081ffff2081f
0000081ffff3081ffff306c2004e06c2004e06c2004e06c2004e06c2004e
06c2004e06c2004e06c2004e06cefff206ce00000886fff20886000007fa
fff207fa000007fafff307fafff304eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e05c7000005c7000005c7ffd105c7ffdd05c7
000002aa00dc02aa00ca02aa00dc02aafff302aafff304e3008c04e3008c
04e3008c04e3008e04e3008c06e6000006e60000075700000757000005c7
009602aafff202aafff202aafff30239ffe50239ffdb0239ffce0239ffce
0239ffc20239ffbb0239ffe80239ffde03c9000003c9000002aa000002aa
000002aafff304a8007604a8007604a8007604a8007604f3007604f30076
04a8007604a800760556fffd0556fffd06e6ffd8074affdd061e000003b8
fff403b8fff402aa002a06c2004e06c2004e06c2004e06c2004e06c2004e
0765ffd1069dffdd0796ffd106ceffdd066a006202aa00bb02aa00dc0473
000a05c7006105c70061071d007e05c7002109cd0096078d000705c70020
04e3002d08b000140400003004c100660000ff530000ff530000ff530000
ff530239001b0239ffa2047300000556001206b3005403fe005706ab0091
040c001f05d6ffe605d6ffe602aa008402aa008402aa00c902aa00c902aa
009102aa002a02aaffc502aaffc302aafff302aa00c902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ff9d0000
fec80000ff230000ff720000ff720000fee70000ff9d0000ff530000ff53
0000ff530556009504e3008b04b5000006350000071d006104eb000f0473
0055049900910499001b0401008c03fa001802390093040f00490476008e
039e000e05eb009b04eb008c04e300520473003404f1005204f1005204f1
0021078d00540492004b04e3005304e3005304e9008c04abfffb04abfffb
03eb001504a8007604e300510624005104e000510473000b063900090400
002203df002203f2004b04ec0014035500880473001204d5008804e9008c
060700760515001903e300000591000003a2003203a2000003a300320355
00320355003204030032037c00320172005502de003203b00032031e0032
04220032037700320378003204260032037a0032035b003203ac00320377
0032037b00320514000003050032030500320321003204b6003203210032
03210032030200320302003202cf003202cf0032032000320121003202ca
00320484003402f2003203480032030a0032034900320349003203200032
01bc000a02f20032034200320484003202e90000034c000a031b003202e9
00000343003203da003203080000012100320204003202f2003202e90000
031b003202e900000342003203da00320308000005ed00460a9800460613
00460689ffba0541ffba01e9001e045400100000ff0d0000ff350000fece
0000feb70000fec90000ffc70000ff4f0000ff9e0000fef002be006902be
00690376000a0376000a03c0ffba039cffba03c0ffba039cffba05c80039
05920032061600820519004b05240041060f008705580028068f002d04ac
00550000fe3b0000fe660000fe680473fffc0400008403d5ffba01e0ffba
01e0ffb101e0ffba01e0ffba06d0002e0984002304000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5fff705c7006106aa009105eb009b0760008d07a1
005407a1005b05c7000005c700610473001404e3001104e3002c04730039
0400002205290042000001010000ff420000fead0000ff3a0000ff5304f3
000a05c7006905c7006105c70069048900a4035500880000ff430000ff01
0000ffac0316007d0000ff370298ffba033d001e0000ff3a0000ff480000
ff490000ff7e0000ff4f0000ff4a0000fe9e0532003905320039022cffb6
022cffb60532003c0532003c022cffba022cffba0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba0532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba049e0034047800300430ffba0430ffba049e0034
047800300430ffba0430ffba02be004f02be004f02be006902be00690376
000a0376000a073200400732004004deffba04deffba0454003403c00046
0454ffba02e2ffba0454003403c000460454ffba02e2ffba0454003403c0
00460454ffba02e2ffba0610002f0610002f0270ffba0298ffba0610002f
0610002f0270ffba0298ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
02e2002102e200210352ffba0352ffba02e2002102e200210352ffba0352
ffba0454003e0454003e022cffba022cffba0454003e0454003e022cffba
022cffba0454003e0454003e022cffba022cffba039c0023039c002301e0
ffba01e0ffba0376000a0376000a0376000a0376000a0732004007320040
04deffba04deffba04e3ffc104e3005402aafff3071dffc104e3ffd504e3
ffc5031dffc1031dffc10473ffff02aaffda0400002104e3008302f00032
04dc004e06fb001f0239001b0239001b04e3001404a8001404f8001404e3
008704e3005402aa0018062500540473008902390070071d007e04e30091
04e3008b031d00660473003003baffc40473000b0473000c040000220473
004904e3005404e300540473004103fa004f03fa0018053e005102390093
0473003402aaffc404e3008d0436002203210032030a0032030a00060348
003202cf003201f0000a01f000000320003202f100320174000a01210032
012100320174000a02760000018e00320150003202490032048400340484
0032035f0000035f003202fa003203480032040300320302003202390000
01bc000a0340000a035e003202ea003202ea003202e9000002e4003202e4
003203be0032030a003202e800320000fe920000fe920000ff730000fe9f
02aa00c903050032030200320348003202ee0000030200320639006205c7
00000556001e05c7006102aa004104eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e0239ffb60239ffb60239ffc40239
ffc40239ffb60239ffb60239ffc40239ffc404a8007604a8007604a80076
04a8007604a8007604a8007604a8007604a800760239ffc90239ffc90239
ffc90239ffc904a8007604a8007604a8007604a8007603e400220454001a
03df003005c7fffd05c70016055600000556009504730041047300230239
ffa20633005904e3005b05c70000031d001b0556fffd0473000e04730034
047300550473003402390093048900110355001b055600000473000c0556
00000473000c0503006f03fa004f059d0020051500190000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee70800
00000401005d0473003404e300110239001b04e300060556fffd05c70096
0473004902aaffcd05c7009604e3009205c700990473008904e300160400
00220473002804540096037c008805b9004e0000ff530000ffbc0000fefe
0000fefe0000fea40000fea402390093000000000000006c0000006c0000
006c0000006c0000011a000001ba00000388000006300000079600000948
000009a800000a3200000abc00000bf000000c6c00000cdc00000d2a0000
0d6800000dbe00000ec200000f44000010ea000012420000135c000014ce
00001602000016be0000185c000019a2000019fc00001a8800001b120000
1b9400001c2200001d1000001ea40000201e00002186000022c0000023aa
00002468000025040000264a0000271e000027a60000284400002a0e0000
2a6a00002cbe00002ebc00002fc4000030940000322e00003392000035f2
0000368800003768000038a200003ae400003c6000003d5600003ee80000
3f5c00003fb000004018000040ca000040fe00004162000043700000446c
000045a800004698000048a4000049a400004b8000004c8000004d220000
4dfa00004f2600004f920000514600005230000053200000541c0000551e
000056020000594800005a6800005b5000005ca400005f0a000060e00000
625e000063ec000065140000657a000066b20000677a000067bc000067fc
000068380000687e000068c6000069160000695a00006994000069c40000
69f400006a3600006a7800006aaa00006aee00006b3a00006b8400006bb4
00006bfa00006c3600006c7600006cb200006cea00006d3a00006d760000
6db200006de200006e2400006e7400006ebe00006ef600006f3800006f6c
00006fe40000706a000072160000738200007578000075c20000765c0000
77aa0000799a00007b4e00007c6800007cca00007d2200007e0200007f34
000080ac000081d40000829a0000837000008430000085d4000086900000
877200008850000088b60000894a00008a0e00008b4a00008be200008d22
00008fc40000914a00009250000092f00000934a0000942a000095d80000
9744000097ee000098e2000099c800009a3c00009a7400009aba00009af8
00009c7400009e8a00009ec400009efa00009fc20000a0960000a1060000
a1240000a1c60000a2a00000a2dc0000a3160000a37c0000a5140000a5b2
0000a6440000a7a00000a8ca0000a9b40000a9f20000aa020000aa200000
ac2a0000ac6c0000acba0000acf60000ad360000ad840000adc20000ae00
0000ae3a0000ae7c0000aeb40000aee40000af1e0000af620000af920000
afda0000b03c0000b0a80000b1560000b18a0000b1fa0000b2400000b2f6
0000b3900000b4240000b48c0000b4e80000b5bc0000b6880000b6b80000
b6e80000b74c0000b7a20000b82a0000b9540000bacc0000bb020000bb32
0000bc3a0000bd0e0000bd4a0000bee00000bf5e0000c06c0000c1a00000
c34c0000c4da0000c7220000c7d80000c81c0000c85c0000c88e0000c8d2
0000c90e0000c9520000c98c0000c9be0000c9f00000cb200000cb560000
cb800000cbcc0000cc0e0000cc340000cc5a0000cc900000cdce0000cde6
0000ce0c0000ce320000ce700000cea00000ced00000cf0e0000cfcc0000
d07e0000d0b20000d0e80000d1240000d1620000d1b00000d1e20000d214
0000d2500000d28c0000d2c80000d3040000d3360000d3660000d3960000
d3bc0000d3e00000d41e0000d5920000d5d60000d60e0000d6460000d67c
0000d6cc0000d70e0000d7540000d7a60000d7f20000d9040000da100000
daf80000dbe80000dcee0000ddd80000de480000df720000dfc20000dff2
0000e0ec0000e3200000e3600000e3a00000e3e00000e41e0000e47c0000
e4da0000e5480000e5680000e6080000e6a20000e6d80000e73c0000e786
0000e7d00000e7ec0000e8080000e8280000e8480000e8680000e8880000
e8ae0000e8d40000e8fa0000e9200000e9500000e9780000e9a00000e9cc
0000e9f80000ea2c0000ea560000ea820000eab80000eae20000eb0e0000
eb440000eb6e0000eb980000ebcc0000ebfc0000ec300000ec740000eca4
0000ecd80000ed1a0000ed4e0000ed800000edc20000edf60000ee260000
ee680000eeac0000eef20000ef4e0000ef6a0000ef860000efa20000efbe
0000efda0000f1480000f3f20000f6620000f67e0000f6980000f6b40000
f6d00000f6ec0000f7080000f7640000f79e0000f8080000f8d20000f972
0000fa480000fac80000fb500000fbc00000fc560000fcb40000fcfa0000
fd580000fdba0000fdfa0000fe560000feba0000ff2c0000ff6a000100fc
0001020c00010236000102520001027e000102b600010302000103320001
036200010396000103c6000103f6000104260001045600010486000104b6
000104e6000105160001054600010576000105a6000105d6000106060001
07900001093e0001096e0001099e00010a8a00010ba200010bd200010c00
00010c3000010c5e00010c8e00010cbc00010ce000010d0400010d3e0001
0e1e00010e6e00010ed40001101a0001104c000110720001109a000110d8
000111ae000112a6000112d6000113060001133600011366000113960001
13c4000113f400011424000114e6000115fa0001162a0001165a0001168a
000116ba000116ea0001171a000117400001176600011796000117c60001
17f600011826000118c600011918000119e600011a1600011a4600011a76
00011aa600011ad800011b0800011b3800011b6800011b9800011bcc0001
1c0000011c3000011c6000011cbe00011ce800011e6e00011f560001210a
0001235e0001259600012734000127940001281a0001282a000128ec0001
2a9000012b6400012c3a00012cc600012dea00012efe00013070000130a6
000130b6000130c6000131a0000131b0000131c0000131d0000131e00001
31f0000132f60001330600013316000133c0000133d00001342200013432
000135260001353600013546000135560001362800013742000137760001
37aa000137da0001380a0001383a000138680001389c0001398600013a7c
00013b5c00013c2600013ce600013d3800013e6a00013f7e000140420001
40520001415e0001416e0001423800014316000143de000144fc000145c8
000146c6000146f80001472c0001475c0001478c000147bc000147f00001
48d20001490200014a2600014a3600014a4600014a7a00014a8a00014b90
00014c7c00014d4a00014d7a00014daa00014e2a00014e3a00014ef00001
4f0000014f5800014ff600015006000151e80001530c0001543200015462
0001558c0001560400015614000156240001563400015688000156980001
56a8000156b8000157b0000158ae000158be0001592a000159b800015a40
00015ade00015b9c00015c8400015d3e00015e6800015f8e000160cc0001
60dc00016202000162f00001634e0001641e0001642e0001661400016766
0001684a0001687a0001699000016a1a00016bd400016c5a00016c6a0001
6cd400016ce400016cf400016d5e00016d6e00016ec200016ed200016f5c
00016fe80001707800017128000171e4000172e4000173a2000174a80001
75b4000176e200017716000178520001788000017996000179a6000179b6
000179e8000179f800017b0400017be800017ce600017d2000017d500001
7df000017e4e00017ebe00017efa00018090000181140001819e000182e6
000183a00001848a000184da000185620001862a00018668000186ba0001
8716000188000001885400018892000188ca00018908000189560001899e
000189e400018a4000018b9600018c3800018d4e00018dac00018e480001
8e8600018f4000018fb6000190b4000190ee0001917800019234000192d6
0001935c0001942800019466000194ee000195bc0001969a000197620001
98700001992600019a3200019ae400019b6c00019c6c00019d5400019dac
00019e0400019e5800019ea600019f3e0001a04a0001a08e0001a0cc0001
a1140001a14a0001a1b40001a2940001a2cc0001a2fa0001a3320001a360
0001a3920001a3c40001a43e0001a4940001a5f20001a6920001a7b00001
a8600001a8ac0001aa020001aab20001aadc0001ab580001aba00001acd8
0001add60001ae440001afc60001b1840001b2ea0001b3f80001b4220001
b5b20001b6f00001b71c0001b7500001b77c0001b7ac0001b91a0001b944
0001ba540001bb060001bbb60001bc4a0001bd180001be540001be640001
be980001bf580001c1100001c1e80001c2520001c3780001c3d60001c4e8
0001c5b60001c6420001c6c00001c79c0001c8dc0001c9d60001ca8c0001
cb780001cc400001cd1e0001cdee0001cecc0001cf600001d18c0001d1b6
0001d1e00001d1f00001d21a0001d3540001d4720001d5820001d5ac0001
d5d60001d6000001d62a0001d6540001d8380001d8620001d88c0001d8b6
0001d8e00001d90a0001d9340001d95e0001d9880001d9bc0001d9e60001
da100001da3a0001dbd40001dbe40001dd1c0001dd2c0001dd560001dd80
0001ddaa0001ddd40001df6e0001e1e80001e3460001e3560001e4c80001
e4d80001e6360001e81a0001e91c0001eaa20001ec6c0001eec00001f02e
0001f2220001f2320001f2420001f3a60001f3d00001f3fa0001f4240001
f44e0001f4780001f4a20001f4cc0001f4f60001f5200001f54a0001f574
0001f59e0001f5c80001f5f20001f61c0001f8d40001fab40001fc3e0001
fe7e0001fff6000200200002004a0002007a000200aa000200fa0002014a
0002018a000201fc00020250000202ae000203040002033a0002037c0002
03c20002040c0002043c00020474000204a40002060a000209500002097a
000209a4000209ce000209f800020a2200020a4c00020a7600020aa00002
0aca00020af400020b1e00020b4800020b7200020b9c00020bc600020bf0
00020c1a00020c4400020c6e00020c9800020cc200020cec00020d160002
0d4000020d6a00020d9400020dbe00020de800020e8000020f1000020f3a
000212c2000213cc00021544000216ca000218ac00021a8000021c9e0002
1cae00021e5600021fee00022260000224a00002261800022628000226d4
0002277e000228ba000228ca00022996000229a600022b4800022d300002
2e9c00022eac00022fb400022fc40002313e0002314e0002327c0002328c
000233c80002357c000236740002368400023776000238d4000239800002
399000023ad200023c8000023d7600023d8600023e2a00023e3a00023f22
00023f3200023ffc0002400c0002412200024132000242f8000243080002
447600024486000246f800024708000249180002492800024aa400024ab4
00024be600024bf600024db400024dc400024f3a00024f4a000250b80002
50c8000250d8000250e8000252a8000252b8000252c8000252d800025428
0002556000025678000257720002591400025aa600025c0e00025d5c0002
5f2200025f3200026084000261e6000263cc000263dc0002656400026708
0002694200026952000269620002697200026adc00026aec00026bbe0002
6bce00026d0600026d1600026dfc00026e0c00026f4600026f5600027010
0002702000027146000272aa00027418000275c6000276f6000277060002
7880000279c200027be200027db400027ec400027ed40002815600028382
0002864c000288a800028b6800028daa00028f68000290c2000290ec0002
91160002912600029136000291600002918a000291b4000291c4000291d4
000291fe000292280002923800029248000292720002929c000292c60002
92d6000292e6000292f60002930600029316000293260002935000029360
000293700002939a000293c4000293ee00029418000294420002946c0002
9496000294c0000294ea000295140002953e0002956800029592000295bc
000295e6000296100002963a000296640002968e000296b8000296e20002
970c00029736000297600002978a000297b4000297de0002980800029832
0002985c00029886000298b0000298da000299040002992e000299580002
9982000299ac000299d600029a0000029a2a00029a5400029a7e00029aa8
00029ad200029afc00029b2600029b5000029b7a00029ba400029bce0002
9bf800029c2200029c4c00029cf400029d3800029dae00029dd800029e02
00029e2c00029e5600029e8000029eaa00029ed400029efe00029f280002
9f5200029f7c00029fa600029fd000029ffa0002a0240002a04e0002a078
0002a0a20002a0cc0002a0f60002a1200002a14a0002a1740002a2260002
a25a0002a28e0002a2c20002a4460002a5c60002a7320002a8800002a940
0002aa020002aa740002ab460002ac180002ac8a0002ad4e0002ae400002
af040002aff60002b09c0002b1a80002b23a0002b3820002b4c00002b524
0002b64c0002b81a0002ba620002bace0002bb3a0002bba40002bc100002
bcbe0002bd6c0002be120002beb80002bf5e0002bf8e0002bfbe0002bfee
0002c0000002c0120002c0240002c0360002c0480002c0b80002c12a0002
c15a0002c16c0002c17e0002c18e0002c19e0002c1b00002c1c20002c1d4
0002c1e60002c1f80002c20a0002c3160002c3bc0002c4c80002c56e0002
c5c60002c5ec0002c6120002c63c0002c66a0002c6b40002c7100002c74a
0002c7a20002c7e20002c8320002c86a0002c8c00002c9020002c9420002
c9940002ca060002ca500002cabc0002cafc0002cb680002cba80002cc10
0002cc520002cca60002cccc0002ccf20002cd1c0002cd4c0002cd7c0002
cdac0002cdfa0002ce560002ce940002ceee0002cf360002cf8c0002cfd0
0002d0240002d06a0002d0ac0002d0d20002d1080002d12e0002d1540002
d17a0002d1a00002d1ce0002d1f80002d2420002d29e0002d2d80002d330
0002d3700002d3c40002d3fc0002d44c0002d48e0002d4ce0002d5080002
d5440002d5800002d5bc0002d5ea0002d6140002d6520002d6820002d6a8
0002d6ce0002d6f40002d71a0002d7440002d76e0002d7ae0002d7fa0002
d8400002d8780002d8a20002d8cc0002d8fc0002d92c0002d9520002d978
0002d9a20002d9cc0002d9fe0002da300002da600002da900002dac00002
daf00002db200002db4e0002db7e0002dbae0002dbde0002dc0e0002dc42
0002dca20002dcd60002dd3a0002dd6e0002ddce0002de020002de660002
df0e0002dfde0002e0f40002e1c60002e2400002e2ae0002e4900002e65a
0002e77a0002e88c0002e9d00002eae40002eb740002ebf40002ec880002
ed0a0002edca0002ee6a0002ef360002f01c0002f0d40002f1a00002f21c
0002f22c0002f2fa0002f3ba0002f4840002f5380002f62e0002f6a40002
f7cc0002f8e60002fa6e0002faf00002fbe00002fcd60002fdce0002fe60
0003007200030202000302880003040a00030476000304e00003054e0003
0714000308dc0003096c000309b8000309f600030a3800030a8000030aac
00030af200030b2800030b6400030ba200030be000030c6800030cf00003
0d3200030d6a00030da400030dde00030e0600030e2e00030e7200030eb6
00030ef400030f3200030f6200030f9200030fb800030fde000310200003
1062000310a8000310ee000311460003119e000311fa00031256000312b2
0003130e0003135c000313aa000313d2000313fa00031420000314460003
148a000314ce0003151a00031566000315b0000315fa0003164800031696
000316d6000317760003179c000317c20003180c0003187c000318a40003
18cc0003191200031958000319ae00031a0400031a5200031b0c00031b34
00031b5c00031bb000031c0400031c4400031c8400031caa00031cd00003
1d3600031d9c00031dde00031e2000031e4600031e6c00031ec200031f18
00031f7400031fd00003202400032078000320c6000321140003215e0003
21a8000322020003225c000322b000032304000323460003238800032426
000324c40003250e00032558000325aa000325fc00032662000326c80003
272000032778000327a4000327d0000327fc000328280003285400032880
000328ac000328d8000328fe00032924000329500003297c000329ca0003
2a1800032a6400032ab000032b0000032b5000032bca00032c2c00032ca4
00032cee00032e8000032eb400032ee800032f1e00032f4200032fac0003
301600033098000331000003314800033190000331dc000332460003326e
00033296000332bc000332e2000333320003338200033416000334680003
34c6000335240003358a000335f0000336d6000337e6000338b4000339ae
00033a1a00033a8000033ade00033b4000033bc600033c4c00033cb20003
3d1800033d8400033df000033e4600033e9c00033ece00033f0000033f26
00033f4c00033fb80003401e0003407c000340de000341f0000342fc0003
440a0003450e000345340003455c00034580000345a4000345cc000345f4
0003461a00034640000347620003489e000349cc00034af800034bb20003
4c6c00034d2c00034dec00034ed000034fb4000350b0000351ac00035290
000353740003544a000355200003556a000355b4000355da000356000003
5650000356a0000356c4000356e8000357be000357ce0003582200035876
000358d40003593200035972000359b2000359fc00035a4600035a960003
5ae600035b3c00035b9200035be400035c2200035c9c00035cde00035d22
00035db000035e3e00035ff0000360000003603a00036074000360a40003
60d4000361080003613c00036176000361b00003620400036258000362ba
0003631c000364cc0003665400036690000366c8000367120003675c0003
67a2000367e80003683800036a5e00036a8400036aaa00036afe00036da8
00036e7a00036f1600036f6400036fa200036fd4000371c20003747e0003
7550000376b4000377ee0003789a00037a3000037c8400037ec000037f1a
00037f600003802e000381200003813e000381e80003830e000383ea0003
83fc0003855c000386e200038708000387c6000387e40003880a00038830
000388560003887c000388a2000388c8000388ee00038914000389600003
89c0000389e800038a0e00038b6c00038d4800038d5800038e2800038f38
00038f96000390ae0003923c000392e2000394280003947a000394cc0003
9504000395500003957c000395c2000395ee0003962a00039684000396ce
0003971a0003978a00039850000398cc0003998c00039a0400039ade0003
9b6e00039ba800039be400039d5c00039e4c00039e9600039edc0003a026
0003a1360003a1460003a2500003a3360003a4480003a5140003a62a0003
a7680003a7780003a8500003a9120003aa120003ab6c0003abcc0003ad50
0003adc40003af180003b0800003b1640003b1b60003b21e0003b3a80003
b51e0003b5a60003b74a0003b83a0003b95e0003ba000003baea0003bbd4
0003bccc0003bdb40003bee60003c02c0003c1ce0003c38a0003c39a0003
c49e0003c5d00003c67a0003c78e0003c81a0003c98a0003ca520003cb4c
0003cc9a0003cdb20003cf580003d0980003d1ea0003d30e0003d4c00003
d6480003d7420003d8180003d9740003da340003da6a0003dad20003dba6
0003dbb60003dc160003dc720003dccc0003dd040003dd420003dd8c0003
ddc80003de060003de500003df620003dfb40003e0100003e0bc0003e0e4
0003e1540003e1840003e1b60003e3600003e4860003e4c00003e4f00003
e53c0003e56e0003e5940003e5ba0003e5fc0003e63e0003e66e0003e69e
0003e6e20003e7280003e7660003e7a00003e7da0003e80a0003e8c60003
e9800003e9c20003e9f20003ea260003ea620003ea920003eac20003eafc
0003eb340003eb640003eb980003ebcc0003ebf40003ec240003ec540003
ec880003ecc00003ecf00003ed200003ed600003ed920003edce0003ee00
0003ee400003ee7a0003eeaa0003eeda0003ef000003ef260003ef4c0003
ef7c0003f0940003f1920003f1c20003f1f40003f2980003f43e0003f5a8
0003f6960003f8000003f8300003f8600003f8980003f8d00003f9220003
f97e0003fa700003fa980003fb060003fb360003fb660003fb8e0003fc00
0003fc300003fc660003fdc60003fe880003ff6400040088000401800004
02d0000403ec0004050a0004060e000407700004091600040aae00040cba
00040df000040e8a00040ff800041008000410d6000412980004149a0004
154c0004162a00041744000417f400041846000418980004196e00041a54
00041ae400041c5c00041d5a00041e5c00041f900004206e000421540004
21f4000422fe000424260004251a000426020004267e000426fa000427a6
0004285800042936000429ac000429fe00042b7000042cf000042eee0004
2fb2000430840004316a000432a00004336c000434740004358e00043692
0004376200043840000439da00043af600043bd000043d4400043f380004
404e000441fc0004428e00044330000443be0004445c0004456000044570
000446ca000447da000447ea000448c4000449e800044a4800044b680004
4c3600044d1800044f000004510e000453e40004561e000457ac000459d6
00045b7e00045d6000045eba00046026000460a80004615c0004624a0004
62f600046362000463e4000464bc00046600000467720004688000046890
000468a00004690200046966000469c400046a5200046ade00046ba40004
6c3e00046c4e00046c5e00046cf800046d9800046dde00046e5000046ec2
00046f1000046f4400046fb6000470260004709a000470ea0004717e0004
720e0004728c00047310000473ac000473d800047446000474f800047606
000476520004781c00047908000479180004794e00047992000479d60004
7a1a00047a5000047a8200047ac400047b1a00047b6600047c1400047c8c
00047d1600047d8a00047df000047e7600047ed600047f4000047fb80004
802c0004808a00048134000481d000048240000482d200048330000483a2
00048450000484fa00048594000486080004868e000486f6000487a60004
886800048918000489ae00048a1000048a8000048ad600048b5800048bda
00048c6400048cf400048d4e00048dba00048e2a00048e9c00048f100004
8f980004902c00049096000491100004919000049208000492b20004934e
000493e200049444000494e600049566000495fc000496a4000497520004
97ee0004984e000498a600049912000499bc00049a6a00049b3800049be2
00049c4800049ca000049d0400049d9600049e2000049eb200049f160004
9f7e00049fe80004a0500004a0bc0004a1380004a1c40004a25c0004a2c8
0004a3300004a3940004a4440004a5080004a5ba0004a64c0004a6ae0004
a71e0004a7920004a83a0004a8e40004a9ac0004aa520004aaba0004ab4e
0004abc40004ac600004ace20004ad600004add00004ae620004aebe0004
af200004afaa0004b02a0004b0920004b0fa0004b1520004b1c00004b228
0004b2aa0004b3240004b3a20004b4260004b4820004b4e80004b5500004
b5f40004b69a0004b75c0004b8100004b8700004b8ec0004b94e0004b9dc
0004ba780004bb0a0004bb740004bbd60004bc680004bcde0004bd7c0004
be140004be880004befc0004bf780004bfd60004c03a0004c0b80004c116
0004c17a0004c1d80004c2380004c2a00004c2f40004c32a0004c3760004
c3da0004c41a0004c4640004c50e0004c5b60004c60c0004c6440004c694
0004c7440004c7f20004c8440004c8980004c8f00004c9400004c9980004
c9fe0004ca5e0004cafe0004cba20004cbe00004cc460004cce40004cd78
0004ce0a0004ceb00004cee20004cf4a0004cfb20004cffc0004d0ce0004
d1500004d1f80004d2600004d29e0004d3080004d3ae0004d4040004d458
0004d4c40004d5280004d5c80004d5fa0004d62a0004d6740004d70c0004
d7360004d7600004d8280004d8820004d9240004d98e0004da0a0004daba
0004db300004dba00004dbf80004dc5e0004dcc00004dd600004ddb80004
de840004def00004df4a0004df940004dfea0004e08a0004e1500004e29c
0004e3b80004e41c0004e4900004e7b60004e8460004e8c60004e9140004
ea7c0004eba80004ebf00004ecec0004edb40004ee920004ef840004f03e
0004f1180004f1820004f21a0004f2ec0004f3e00004f4520004f4c00004
f5040004f6160004f74a0004f83c0004f8800004f8bc0004f9a60004faa8
0004fc2a0004fd260004fe2a0004ff340005002000050082000500f80005
02820005031400050444000505340005065c000507940005085800050940
00050a0000050b5400050d0600050e9800050fd2000511380005120e0005
12cc0005138a00051450000515a8000516f8000517080005171800051728
000517c400051862000518b0000518ee000519340005196400051ac20005
1c5e00051d7000051e980005202400052196000522a60005247a00052666
000528c000052a2000052b4a00052cdc00052e4e00053064000532d20005
33d200053508000536280005377a0005386e000539b4000539f600053a36
00053c7800053ec600054026000541bc000543ec0005458c000546180005
46480005469000054724000547be0005491e000549b000054a2000054a60
00054a9e00054c5000054e8e0005503e000551680005525e000553640005
553a000556f0000557f20005590800055ace00055cbc00055e6400055fe0
00056166000562c60005635e000563fa000565180005663e000567960005
694a00056a8600056bda00056c6000056cde00056d9200056e5800056f04
00056fce00057100000572a0000572c6000572ec000572fc0005732c0005
735c000574d00005764000057702000577c4000578a60005797e00057a32
00057b0600057bb000057c7600057df800057fa800058012000580420005
806a0005809e000580d2000580e2000580f2000581220005814800058184
000581c0000581f4000582280005825c00058292000583b8000583c80005
83f8000584280005845c00058494000584c8000584fc0005853000058564
00058598000585ce000585fe0005863400058668000586a2000586f20005
873c00058770000587a4000587da00058810000588c4000588d4000589de
00058b4a00058cb400058e5400058f9a000590f2000591e4000592ee0005
93d2000594d2000595f8000596e4000597a0000598620005994a00059a04
00059ace00059b5600059c0400059c9600059d1400059e2e00059e9a0005
9f620005a05e0005a0cc0005a13c0005a1f40005a3d80005a4e60005a56c
0005a5b20005a67a0005a70a0005a7f40005a8a00005a90e0005aa160005
ab020005abc20005ac080005ac9a0005ada80005ae440005aea00005af96
0005b0900005b2120005b3760005b4740005b55e0005b62c0005b6540005
b67c0005b6ac0005b6dc0005b7040005b72c0005b7540005b77c0005b7d6
0005b8400005b8720005b8a20005b8c80005b8f00005b9180005b9420005
b96c0005b9940005b9bc0005b9e20005ba0e0005ba980005bac00005bb42
0005bb6a0005bb900005bbb60005bbdc0005bc2e0005bc820005bcb40005
bce40005bd160005bd520005bd820005bdb80005bdde0005be040005be38
0005be6c0005beac0005bef20005bf180005bf3e0005bf640005bf8a0005
bfb40005c0180005c0640005c0960005c0c40005c0fa0005c1380005c160
0005c1860005c1ac0005c1f60005c2380005c2600005c2860005c2b20005
c2d80005c3340005c3640005c3940005c3c40005c3ea0005c4140005c444
0005c4740005c49a0005c4c00005c4e60005c50c0005c5320005c5580005
c5800005c5f80005c6220005c68c0005c6b40005c7580005c7800005c7fc
0005c8300005c8720005c8a20005c8d20005c9020005c9320005c95e0005
c9840005c9cc0005ca0e0005ca3a0005ca620005ca920005cac20005cae8
0005cb0e0005cb3a0005cbee0005cc160005ccc60005cd080005cd4a0005
cd7a0005cdae0005cdd40005cdfc0005ce220005ce4a0005ce700005ce98
0005cec00005cee80005cf0e0005cf340005cf5a0005cf800005cfa80005
d0300005d0640005d0ca0005d0fa0005d12a0005d1500005d1760005d1b0
0005d1f40005d2260005d2620005d2920005d2c20005d2f60005d32a0005
d35a0005d3900005d3c80005d3f80005d4260005d4500005d47e0005d4a4
0005d4ca0005d4fe0005d5440005d57e0005d5ba0005d5ec0005d61c0005
d6580005d6940005d6d00005d71a0005d7640005d79c0005d7da0005d816
0005d8560005d8b20005d90e0005d96a0005d9c60005da300005da9a0005
daca0005db020005db420005db860005dbca0005dc0e0005dc6a0005dcc6
0005dd320005dd9e0005de0a0005de760005dea60005ded60005df0e0005
df460005df860005dfc60005e0020005e03e0005e09a0005e0f60005e15a
0005e1be0005e2220005e2860005e2e40005e3420005e3700005e39e0005
e3d00005e4020005e4340005e4660005e4a40005e4e20005e5520005e5c4
0005e6260005e6880005e6ea0005e74c0005e7a40005e7fc0005e82c0005
e85c0005e8900005e8c40005e8f80005e92c0005e9860005e9f20005ea5c
0005eac60005eb2e0005eb960005ebc60005ebf60005ec2a0005ec5e0005
ec9e0005ecde0005ed1a0005ed560005edaa0005ee100005ee640005eeb2
0005eee20005ef120005ef460005ef7a0005efae0005efe20005f01a0005
f0520005f0ae0005f1040005f1640005f1c40005f21a0005f2700005f2ca
0005f31e0005f3540005f3860005f3c40005f3f40005f4240005f46e0005
f49c0005f4cc0005f5120005f54a0005f5860005f5ca0005f5fe0005f62e
0005f6780005f6cc0005f7220005f7780005f7dc0005f8400005f8920005
f8e80005f9340005f9860005f9f20005fa5e0005faca0005fb360005fbb2
0005fc2e0005fc700005fcb20005fcfa0005fd420005fd940005fde60005
fe340005fe820005fef00005ff5e0005ffd40006004a000600c000060136
000601a600060216000602580006029a000602de00060322000603660006
03aa000603f40006043e000604ac0006051400060586000605f800060660
000606c80006073200060796000607cc0006080200060852000608800006
08cc000609080006095e0006098e000609be000609ea00060a1600060a3c
00060a9000060afe00060b5200060bee00060ce000060d2200060d480006
0da400060dd400060e1600060e7c00060eea00060f5000060fba00060fe0
00061088000611260006126600061294000612c2000613260006138a0006
13b8000613ec0006141c0006144c000614bc00061532000615da00061678
000617b4000617e4000618140006187a000618e000061910000619400006
1970000619a6000619d600061a0600061a5200061ab200061b0e00061be8
00061cc200061d3400061d7a00061da000061de200061e1200061e540006
1e8800061ef200061f3800061fae00061fd40006204400062092000621b2
00062444000625d800062730000628e200062bf000062e860006306e0006
320c00063464000635a6000637bc0006382c000638940006390600063978
00063a0000063a9e00063c7c00063e2a00063ff6000640f60006428a0006
43ea000644ae000645a40006460c0006466e000646dc0006474000064814
0006487c0006494600064a0400064aa000064b0200064b9800064c2a0006
4cc600064d5e00064dc400064e2200064e8e00064ef600064f7200065020
0006508a000650e80006514a000651fc0006527e00065300000653360006
5368000653780006538800065494000655bc000657dc0006592e0006593e
000659f800065aee00065b7800065b8800065c0800065c8000065ca20006
5d6400065d7400065d8400065d9400065da400065ea000065fe6000661a6
000663ba000664ac00066512000665760006663800066648000667e20006
67f200066802000668c6000669e200066abe00066ace00066ade00066aee
00066c4a00066e3a00066f4a00066f5a00066f6a00066f7a00066f8a0006
704000067050000671a6000672e2000673d0000674e000067584000675f2
000676620006777c000677e000067824000678b200067a7200067ab20006
7ba600067c7200067d3e00067dc400067e9a00067f360006809e00068122
000681b600068330000684a20006862a0006870e000688d8000689c20006
8ab000068bdc00068d0200068e5c00068fc60006910800069180000692b6
000693ae000694ac000695a80006968e00069718000697a2000698940006
995000069a1200069abe00069bb400069c9000069d9400069ed400069fbc
0006a13c0006a26a0006a36e0006a3b80006a4240006a4e40006a5c00006
a6fe0006a7e60006a9320006aa600006ab6a0006ac0c0006ad580006ae14
0006af3e0006b0000006b0480006b2420006b2f80006b4e60006b6420006
b7e00006b8e20006b9480006ba900006bb080006bc980006bcce0006bd04
0006bd560006bda80006bde00006be200006be580006be980006bfc60006
c0280006c0e80006c19c0006c23e0006c2d60006c3520006c45e0006c4bc
0006c5ea0006c69a0006c7680006c7a20006c7de0006c8660006c9260006
ca220006caf80006cb1e0006cb440006cbdc0006cbec0006cbfc0006cc0c
0006cc1c0006cc2c0006cc3c0006cc4c0006cc5c0006cc6c0006cc7c0006
cc8c0006cc8c0006cdf00006ce000006ce740006cf0e0006d01c0006d176
0006d2d60006d4900006d65e0006d8320006d8b60006d9d40006db1e0006
dcc60006dd620006ddb20006de480006df660006dfb60006e0460006e170
0006e1800006e2ae0006e3be0006e4340006e48c0006e5780006e5be0006
e5fe0006e69a0006e6ee0006e8700006e94e0006e98e0006e9f80006ea62
0006ea9a0006ebe20006ecd80006ede60006ee1e0006ee560006ee7c0006
eea20006eed20006ef020006ef260006ef4a0006ef760006efa20006efe8
0006f02e0006f05a0006f0860006f0cc0006f1120006f16e0006f1ca0006
f1ee0006f2120006f26a0006f2c20006f3080006f34e0006f3840006f3ba
0006f3f00006f4260006f4880006f4f20006f5520006f5b20006f5fe0006
f6cc0006f6f40006f71c0006f7880006f7f40006f8420006f8900006f996
0006f9a60006f9f00006fa3a0006fa820006faca0006fb280006fb8a0006
fbe40006fc360006fcba0006fd220006fd960006fe080006fe8e0006fefc
0006ff6e0006ffd40006fffa0007002000070044000700680007009c0007
00d0000700f60007011c00070188000701f400070260000702c80007031a
0007036c000703c2000704140007043c0007046400070496000704c40007
051a00070570000705cc000706280007064e00070674000706a0000706cc
0007072800070784000707a8000707cc000708820007093800070b0a0007
0b1a00070b7e00070be200070c2e00070c7a00070e3e00070e4e00070f5c
00070f6c00070fc60007102000071078000710d000071134000711980007
11dc00071220000713b6000715480007169800071866000719e400071b9e
00071ccc00071dc40007203e000721c2000723ea00072566000725f20007
272a0007294e000729d6000729e600072b5600072c8200072dea00072f30
00073066000731640007333a000734ee0007357e000736c2000737ae0007
38fc000739ea00073bd600073cf200073e1400073fe800074152000742f6
000743fc0007454c000746a40007489a00074a7600074bda00074c9e0007
4dd200074e9c00074fa60007512000075214000752f80007549600075668
0007567800075726000757f000075800000758c800075962000759ae0007
59be00075a3800075b0c00075b6800075c1800075c5a00075d9000075e86
00075f82000760820007612000076264000763ac000765cc000766620007
676200076882000769ca00076a8600076b6000076c3c00076d0800076e0a
00076fb6000770d6000771fc0007728a0007731a0007742c0007748c0007
7578000776e40007781600077912000779fe00077b2400077cb400077e5a
0007802600078156000781d800078258000782e200078362000783ec0007
84a800078550000785fe000786a600078720000787a40007881e000788a2
00078958000789fa00078a9a00078b3c00078bb800078c3e00078cba0007
8d4000078df800078ea200078f4800078ff0000790e0000791d4000792b4
0007939c0007948e0007958200079668000797540007991c00079a7e0007
9b2200079c3200079cf800079d0800079dfc00079f5600079fea0007a094
0007a15e0007a2300007a3120007a3ae0007a4980007a5be0007a5ce0007
a6880007a7420007a7520007a7fa0007a8a00007a98e0007aa7c0007ab58
0007ac2a0007adae0007af540007afee0007b08a0007b0c60007b1040007
b1400007b17e0007b1d80007b2300007b28a0007b2ee0007b37a0007b578
0007b5cc0007b5dc0007b6680007b6ec0007b7700007b8280007b9380007
baf60007bc140007bca40007bd480007bdf80007beda0007bf5c0007bfea
0007c1120007c15a0007c1b20007c28c0007c2c80007c3260007c3640007
c3960007c3da0007c41c0007c44c000100000d3500f2003c008f00060002
0010002f0055000006fa02c20005000200>
<0000005303ea0000000300000000006a00000000000300000001000a006a
00000003000000020008007400000003000000030058007c000000030000
0004001400d40000000300000005001800e8000000030000000600180100
000000030000000700ba01180000000300000008003001d2000000030000
0009008a0202000000030000000d02aa028c000100000000000000350536
00010000000000010005056b000100000000000200040570000100000000
0003002c05740001000000000004000a05a00001000000000005000c05aa
0001000000000006000c05b60001000000000007005d05c2000100000000
00080018061f000100000000000900450637000100000000000d0155067c
0003000104030002000e07d10003000104030004001a07df000300010405
0002000a07f9000300010405000400160803000300010406000200060819
00030001040600040012081f000300010407000200080831000300010407
0004001408390003000104080002000c084d000300010408000400180859
0003000104090000006a08710003000104090001000a08db000300010409
0002000808e50003000104090003005808ed000300010409000400140945
000300010409000500180959000300010409000600180971000300010409
000700ba0989000300010409000800300a430003000104090009008a0a73
000300010409000d02aa0afd00030001040a0002000e0da700030001040a
0004001a0db500030001040b000200120dcf00030001040b0004001e0de1
00030001040c000200080dff00030001040c000400140e0700030001040e
000200100e1b00030001040e0004001c0e2b000300010410000200120e47
0003000104100004001e0e59000300010413000200060e77000300010413
000400120e7d0003000104140002000e0e8f0003000104140004001a0e9d
000300010415000200140eb7000300010415000400200ecb000300010416
0002000e0eeb0003000104160004001a0ef9000300010419000200140f13
000300010419000400200f2700030001041b0002000a0f4700030001041b
000400160f5100030001041d000200060f6700030001041d000400120f6d
00030001041f0002000a0f7f00030001041f000400160f89000300010424
0002000c0f9f000300010424000400180fab00030001042a000200080fc3
00030001042a000400140fcb00030001042d0002000a0fdf00030001042d
000400160fe900030001080a0002000e0fff00030001080a0004001a100d
0003000108160002000e10270003000108160004001a1035000300010c0a
0002000e104f000300010c0a0004001a105d000300010c0c000200081077
000300010c0c00040014107f00a900200032003000300036002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0042006f006c0064004d006f006e006f007400790070
0065003a0041007200690061006c00200042006f006c0064003a00560065
007200730069006f006e00200035002e0030003100200028004d00690063
0072006f0073006f0066007400290041007200690061006c00200042006f
006c006400560065007200730069006f006e00200035002e003000310041
007200690061006c002d0042006f006c0064004d00540041007200690061
006c00200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0069006e002000740068006500200055006e006900740065006400200053
0074006100740065007300200061006e0064002f006f00720020006f0074
00680065007200200063006f0075006e00740072006900650073002e0054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d00200052006f00620069006e0020
004e006900630068006f006c00610073002c002000500061007400720069
0063006900610020005300610075006e0064006500720073002000310039
003800320059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e007400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d007300200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c0075006400650064002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
303620546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e417269616c426f6c644d6f
6e6f747970653a417269616c20426f6c643a56657273696f6e20352e3031
20284d6963726f736f667429417269616c20426f6c6456657273696f6e20
352e3031417269616c2d426f6c644d54417269616c206973206120747261
64656d61726b206f6620546865204d6f6e6f7479706520436f72706f7261
74696f6e20696e2074686520556e697465642053746174657320616e642f
6f72206f7468657220636f756e74726965732e546865204d6f6e6f747970
6520436f72706f726174696f6e4d6f6e6f74797065205479706520447261
77696e67204f6666696365202d20526f62696e204e6963686f6c61732c20
5061747269636961205361756e646572732031393832596f75206d617920
757365207468697320666f6e7420746f20646973706c617920616e642070
72696e7420636f6e74656e74206173207065726d69747465642062792074
6865206c6963656e7365207465726d7320666f72207468652070726f6475
637420696e207768696368207468697320666f6e7420697320696e636c75
6465642e20596f75206d6179206f6e6c792028692920656d626564207468
697320666f6e7420696e20636f6e74656e74206173207065726d69747465
642062792074686520656d62656464696e67207265737472696374696f6e
7320696e636c7564656420696e207468697320666f6e743b20616e642028
6969292074656d706f726172696c7920646f776e6c6f6164207468697320
666f6e7420746f2061207072696e746572206f72206f74686572206f7574
7075742064657669636520746f2068656c70207072696e7420636f6e7465
6e742e004e0065006700720065007400610041007200690061006c002000
4e00650067007200650074006100740075010d006e00e900410072006900
61006c002000740075010d006e00e9006600650064004100720069006100
6c002000660065006400460065007400740041007200690061006c002000
46006500740074038803bd03c403bf03bd03b10041007200690061006c00
20038803bd03c403bf03bd03b100a9002000320030003000360020005400
6800650020004d006f006e006f007400790070006500200043006f007200
70006f0072006100740069006f006e002e00200041006c006c0020005200
690067006800740073002000520065007300650072007600650064002e00
41007200690061006c0042006f006c0064004d006f006e006f0074007900
700065003a0041007200690061006c00200042006f006c0064003a005600
65007200730069006f006e00200035002e0030003100200028004d006900
630072006f0073006f0066007400290041007200690061006c0020004200
6f006c006400560065007200730069006f006e00200035002e0030003100
41007200690061006c002d0042006f006c0064004d005400410072006900
61006c00200069007300200061002000740072006100640065006d006100
72006b0020006f006600200054006800650020004d006f006e006f007400
790070006500200043006f00720070006f0072006100740069006f006e00
200069006e002000740068006500200055006e0069007400650064002000
530074006100740065007300200061006e0064002f006f00720020006f00
7400680065007200200063006f0075006e00740072006900650073002e00
54006800650020004d006f006e006f007400790070006500200043006f00
720070006f0072006100740069006f006e004d006f006e006f0074007900
70006500200054007900700065002000440072006100770069006e006700
20004f006600660069006300650020002d00200052006f00620069006e00
20004e006900630068006f006c00610073002c0020005000610074007200
690063006900610020005300610075006e00640065007200730020003100
39003800320059006f00750020006d006100790020007500730065002000
7400680069007300200066006f006e007400200074006f00200064006900
730070006c0061007900200061006e00640020007000720069006e007400
200063006f006e00740065006e0074002000610073002000700065007200
6d0069007400740065006400200062007900200074006800650020006c00
6900630065006e007300650020007400650072006d007300200066006f00
720020007400680065002000700072006f00640075006300740020006900
6e0020007700680069006300680020007400680069007300200066006f00
6e007400200069007300200069006e0063006c0075006400650064002e00
200059006f00750020006d006100790020006f006e006c00790020002800
69002900200065006d006200650064002000740068006900730020006600
6f006e007400200069006e00200063006f006e00740065006e0074002000
6100730020007000650072006d0069007400740065006400200062007900
2000740068006500200065006d00620065006400640069006e0067002000
7200650073007400720069006300740069006f006e007300200069006e00
63006c007500640065006400200069006e00200074006800690073002000
66006f006e0074003b00200061006e006400200028006900690029002000
740065006d0070006f0072006100720069006c007900200064006f007700
6e006c006f006100640020007400680069007300200066006f006e007400
200074006f002000610020007000720069006e0074006500720020006f00
720020006f00740068006500720020006f00750074007000750074002000
640065007600690063006500200074006f002000680065006c0070002000
7000720069006e007400200063006f006e00740065006e0074002e004e00
65006700720069007400610041007200690061006c0020004e0065006700
72006900740061004c0069006800610076006f0069007400750041007200
690061006c0020004c0069006800610076006f0069007400750047007200
6100730041007200690061006c00200047007200610073004600e9006c00
6b00f6007600e900720041007200690061006c0020004600e9006c006b00
f6007600e9007200470072006100730073006500740074006f0041007200
690061006c002000470072006100730073006500740074006f0056006500
740041007200690061006c002000560065007400480061006c0076006600
6500740041007200690061006c002000480061006c007600660065007400
50006f00670072007500620069006f006e00790041007200690061006c00
200050006f00670072007500620069006f006e0079004e00650067007200
690074006f0041007200690061006c0020004e0065006700720069007400
6f041f043e043b0443043604380440043d044b0439004100720069006100
6c0020041f043e043b0443043604380440043d044b043900540075010d00
6e00e90041007200690061006c002000540075010d006e00e90046006500
740041007200690061006c0020004600650074004b0061006c0131006e00
41007200690061006c0020004b0061006c0131006e004b00720065007000
6b006f0041007200690061006c0020004b007200650070006b006f011100
e20323006d0041007200690061006c0020011100e20323006d004c006f00
64006900610041007200690061006c0020004c006f006400690061004e00
65006700720069007400610041007200690061006c0020004e0065006700
72006900740061004e00650067007200690074006f004100720069006100
6c0020004e00650067007200690074006f004e0065006700720069007400
610041007200690061006c0020004e006500670072006900740061004700
72006100730041007200690061006c00200047007200610073000000b154
80410d03ac00af03ac0002001003ac002003ac00a003ac0003004003acb3
070d3240b803acb312143240b803acb2162b32b9ffc003acb23a3340b803
acb32d943280bc03ab005f0033ffc003abb2553340b803abb340443240b8
03abb3333b3240b803abb32f313240b803abb2083340b803abb30714321f
411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab
00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40b803
a5b208330f411403a50001004003a500cf03a500ff03a50003002003a500
af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b208330f41
1b03a30001000f03a3001003a3008003a300af03a300cf03a30005006f03
a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2101f1041
0a039e007f039e0002039a000f0101001fffc00398b310143240b80399b3
0f1332404110039500500395000200b0034d00c0034d0002006f0391007f
03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b
0080038b000300a0038b00010020038b0040038b0002ffc0038bb3131632
40b80383b20f1132b9ffc0037bb2303432b9ffc0037bb310183250411403
7800010365036e0023001f037e036e001e001f0363036e001d001f036203
64000d001fffc00340b30f1032804110033f0001033f03150029001f0341
03160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a
32410a034303180032001f030f030d0034001f03080307b2321f20bb0340
000100400388b3090b3240b80388b2101532bd038503070014001f038003
07b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a003
540002001f036e0001009f036e00010040036eb2090b3241110345031c00
16001f036b031d0015001f0346031e0015001f03a703a10046001f039db3
261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8033eb30d
0e32c04109033e000100b0038e00c0038e0002ffc00390b3263832004126
03280030032800020020037f0030037f00020010038a0030038a0050038a
006f038a007f038a009f038a000600000389003003890002002f037a0070
037700900377009f037a0004ffc00315b20f1032b9ffc00315b2242832b9
03190318b2321f10bb031a0001ffc0031ab3090e3240b80318b2121332b9
ffc00318b30c0e323fbd0373004f0373000200400374b31718326fbb032a
00010040032cb3181b3240b80370b2090c32bd031703160032001fffc003
16b20e1132bd031c031e0016001f031d031eb2151fb0411f031e0001000f
031f000102ca02d00015001f02d302d5000d001f02cf02d0000d001f02cb
02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b3090c32
40b802d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02c300
30001f02da02b80032001f02d902b9003f001f02d802b80064001f02b902
b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002
c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b212
1632412502c202c1001c001f02d702c10024001f02c102c00022001f02bf
02c00018001f02c0027400c8001f02b50235003b001f02b40235003b001f
02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c81fb8
02afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02
adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a02a1
015801f4001f02a000d801f4001f001202a2b237c81fb80290b2bc201fb9
029002904018374025402d40a6033025302d30a6032025202d203720a620
4110028e0005009f028b0001028b028b0037002002890030028900400289
00900289b20437b041fd027400c0027400020080027400a0027400020060
0274007002740002000002740010027400020080027400f002740002003f
0285004f028500020090027e0090027f009002800090028100040090027a
0090027b0090027c0090027d000400900274009002750090027700030070
027e0070027f007002800070028100040070027a0070027b0070027c0070
027d000400700274007002750070027700030060027e0060027f00600280
0060028100040060027a0060027b0060027c0060027d0004006002740060
02750060027700030050027e0050027f005002800050028100040050027a
0050027b0050027c0050027d000400500274005002750050027700030040
027e0040027f004002800040028100040040027a0040027b0040027c0040
027d000400400274004002750040027700030030027e0030027f00300280
0030028100040030027a0030027b0030027c0030027d0004003002740030
02750030027700030020027e0020027f002002800020028100040020027a
0020027b0020027c0020027d000400200274002002750020027700030010
027e0010027f001002800010028100040010027a0010027b0010027c0010
027d0004001002740010027500100277000300e0027e00e0027f00e00280
00e00281000400e0027a00e0027b00e0027c00e0027d000400e0027400e0
027500e00277b103d041c5027e00d0027f00d0028000d00281000400d002
7a00d0027b00d0027c00d0027d000400d0027400d0027500d00277000300
30027400400274000200c0027e00c0027f00c0028000c00281000400c002
7a00c0027b00c0027c00c0027d000400c0027400c0027500c00277000300
b0027e00b0027f00b0028000b00281000400b0027a00b0027b00b0027c00
b0027d000400b0027400b0027500b00277000300a0027e00a0027f00a002
8000a00281000400a0027a00a0027b00a0027c00a0027d000400a0027400
a0027500a0027700030090027e0090027f00900280009002810004009002
7a0090027b0090027c0090027d0004009002740090027500900277000300
20027e0020027f002002800020028100040020027a0020027b0020027c00
20027d00040020027400200275002002770003028101580801001f028001
290801001f027f00ec0801001f027e00d80801001f027d00b10801001f02
7c00a60801001f027b00820801001f027a00370801001f02770026080100
1f027500200801001f0274001f0801b21f370f41160235004f0235005f02
35006f0235009f023500af023500bf0235000700af023500cf023500df02
3500ff02354022040f074f079f07af07bf0705af07e007020f064f069f06
af06bf0605af06e0060220411b020d0001005f02350001008f0235000100
7f023500ef02350002002f0235003f02350002003f0234004f0234000202
350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a0141090247
0104001e001f022000370201001f0158400c263e1fd8263e1f3726273e1f
b8028eb6ec171fb226361fb801bcb226361fb80129402b26361fec26361f
b126361fa626361f8226361f3726361f3226361f2d26361f2526361f1f26
361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f21263e1f
20263e1f3700161600000012110840b9020d01a6b3c50d0009b801bcb227
281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901b6002701
01001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb
1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f0401
001f0154001f0401001f0153001f0201001f0152b21f561fb80151b21f29
1fb8012bb227261f410d012a00270125001f0129015800e4001f0125001f
0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d01080027
0801001f0106002d0101001f0105001f0101001f0103b31fbb1fefb90158
0401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b8
0156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401001f
00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2db80801b5
1f8d1f291f89b901580401b21f8220b802ab40131f801f301f742de41f73
1f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb61f50
25891f491fb80125b21f4725b80401400b1f461f791f401f271f3920bc02
ab001f003801580401b21f372dbc0125001f003201580125b61f2c1f341f
2a25b80801b21f5537b80111402a07f00790075b0742073b07230722071e
071d071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b10100858d1bb900010119858d5959001816763f183f
123e113946443e113946443e113946443e113946443e11394660443e1139
4660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d4544
b9020e020d45445958b90470020f455258b9020f04704459594bb0e45320
5c58b90020020e4544b90027020e45445958b908420020455258b9002008
424459594bb8012553205c58b90026020f4544b90021020f45445958b90a
0d0026455258b900260a0d4459594bb8040153205c58b1d8204544b12020
45445958b9250000d8455258b900d825004459594bb8040153205c58b901
5800264544b1262645445958b923200158455258b9015823204459594bb0
2953205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f010d
4459594bb02f53205c58b11f1f4544b1251f45445958b90135001f455258
b9001f01354459594bb8030153205c58b11f1f4544b11f1f45445958b914
28001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec3456523
456023456560234560b08b766818b080622020b17e754565234520b00326
6062636820b003266165b075236544b07e234420b131c34565234520b003
266062636820b003266165b0c3236544b0312344b100c3455458b1c34065
44b23140314523614459b33f3c5841456523456023456560234560b08976
6818b080622020b1583c4565234520b003266062636820b003266165b03c
236544b058234420b13f414565234520b003266062636820b003266165b0
41236544b03f2344b10041455458b141406544b23f403f45236144594569
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b
2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b04061445959
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b040614418
004569444569447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b
2b0073737373737373737373737373737373737373737373747474747474
7474747474747474747474747474747575757374757575752b7300004bb0
2a534bb036515a58b1070745b040604459004bb02e534bb036515a58b103
0345b0406044b1090945b8ffc06044592b4569440174007373732b456944
2b012b435c58400a0006000702a006a00702b9ffc00274b31a1d326fbd02
77007f02770002ffc00277b22f3132b9ffc00277b322253240b80274b32f
353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3
251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ffc0b6
a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b7374
59002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73
012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b
73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b
2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b73
2b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b74752b
000000>
[16305 16261 16301 15993 16353 16361 16377 15773 16093 16113 15821 16109 16365
15025 16197 16361 15857 16053 15881 16233 16301 15449 16065 16377 15477 15965
16117 15425 15557 16353 16369 11749 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3370 17 <00010093000001ac01190003002440150238000a02260f001f0020003000
040019046776182b4e10f45d4dfd003f4ded3130331121119301190119fe
e700>Arial-BoldMT AddT42Char 
3 960 69 <00020087ffe8049405ba000f001c009db90012fff840310b39371b471b02
125606560a56165618591cf7070635043b0d3b13351b45044b0d4b13451b
940799090a0c0e010201001ab80274b2050714b8027440130b0b0f000a17
21081a701e011e10290203260fb80129400c01700080000200191d3f4118
2b4e10f4713c4dedfd3ce64e1071f64ded003f3c3fed3fed3f3c31300071
5d015d4358400b6606660a66166618691c055d59005d2b33112111363332
1211100023222627151314171633323635342623220687011982b2c2fefe
fdb95bb140123449795d838467658605bafdf094fee7fef9fef0feda5b59
9c022aa54f709fabb6a19d00>Arial-BoldMT AddT42Char 
3 1528 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>Arial-BoldMT AddT42Char 
3 1768 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>Arial-BoldMT AddT42Char 
3 3024 75 <000100920000045905ba001600b2402b0f011f0139013302331042014211
de01f9010907051605240258116811050101021314111213031402010fb8
0274401d0307090a0a14150a1600000b0a26080940202434af0901ff0901
091a18b8ffc040162224349018a018027018f01802ef1801180014261615
b8ffc0400f202434a01501f015011519173f3c182b4e10f471722b3c4dfd
3c4e105d71722bf671722b3c4dfd3c003f3c3f3c3c103c3fed3939111739
030e103c083c3130015d005d01113633321e021511211134262623220606
1511211101ab88bd619c4f1dfee720513d466e33fee705bafde59f487088
8ffd910231a75a35448986fdec05ba00>Arial-BoldMT AddT42Char 
3 3442 77 <0002ffa2fe5101a605ba00030015008b404d1607260720173607b6080580
17010304050015140d100c1009030f00014000d000e00003005d02010004
15065f1001108e090f01142602100501051a8f17014f1701170d33100c01
0c19161617ba026b0021026ab13c182b2b4e10f45d194de4184e105d71f6
5d3c4dfd3c003fed5d3f3c3f3cfd5d713c11123911330305103c3c103c3c
313001715d131121111511140606232226273716163332363635118d0119
3597752a61383114230f2b371204b60104fefc90fbfbcba75e0f0ff00405
25348203f500>Arial-BoldMT AddT42Char 
3 5486 85 <0001008700000337043e001000a84028970501090e01530566057505032f
12580e680e7012040a090f0c1f0c028f0cff0c023f0c4f0c020cb8027740
29070701000a0302060a28000910093009700904091a7f129f12025f127f
12af12d01204121000260103b80129400b02028001a001020119113fb901
1c00182b4e10f4713c4d10ed10fd3c4e105d71f65d194de400183f3c3f3c
3fed5d717239323130015d005d71004bb017534bb035515a58b10a323859
005d212111211536363332170726232206061101a0fee70105436b446059
57473d3b522f0426976b4435f52e41aafef1>Arial-BoldMT AddT42Char 
3 6552 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>Arial-BoldMT AddT42Char 
3 7072 89 <0001000b0000045a0426000b011b401505281a2f3407281a2f3406281a2f
3408281a2f3403b8ffd8b31a2f3404b8ffc040201a3a349a040106030b08
080a0c0b1501150212031a091a0a22002d0bc70b0c00b8fff040161d2034
0a00050b1400190b25002a0b34003a0b870009b10602435458b40a010d0c
04b8ffc0400b091734040100090106000a003f3f3c1112392b0111123939
1b40120b000a040b0a0909020201060b000a09390db8ffc040181c28340b
0d1f0d300d400d040d17171a100a3f0a4f0a030ab80230400b0402390b04
3f044f040304ba02300001ff80400f0c350001200140010301190cc4a018
2b194e10f45d2b184ded5ded10fd5d194e456544e65d2b184ded003f3c3f
3c103c103c12390112393959313001712b5d005d2b012b2b2b2b2b210121
13173637363713210101b7fe540127c83a17060e10ca0121fe5a0426fde2
b545162d2d021efbda00>Arial-BoldMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/period 17 def
/b 69 def
/d 71 def
/e 72 def
/h 75 def
/j 77 def
/r 85 def
/t 87 def
/v 89 def
end
Arial-BoldMT /Encoding get
dup 46 /period put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 106 /j put
dup 114 /r put
dup 116 /t put
dup 118 /v put
pop
end
%ADOEndSubsetFont
reset_gvm
/AWWROB+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/AWWROB+Arial-BoldMT*1 
[46{/.notdef}rp /period 51{/.notdef}rp /b /.notdef /d /e 2{/.notdef}rp 
/h /.notdef /j 7{/.notdef}rp /r /.notdef /t /.notdef 
/v 137{/.notdef}rp]
AWWROB+Arial-BoldMT nf
AWWROB+Arial-BoldMT*1 [7.2 0 0 -7.2 0 0 ]msf
144 15.7017 mo
(de.bht.jvr)
[4.38618 3.99023 1.98865 4.38618 4.38618 2.38458 1.98863 1.98865 3.83904 0 ]xsh
490.98 50.7419 mo
166.32 50.7419 li
166.32 232.122 li
490.98 232.122 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.75294 .74902 .75294 colr
ef
490.98 50.7419 mo
166.32 50.7419 li
166.32 232.122 li
490.98 232.122 li
cp
@
241.86 37.782 mo
166.32 37.782 li
166.32 51.402 li
241.86 51.402 li
cp
ef
241.86 37.782 mo
166.32 37.782 li
166.32 51.402 li
241.86 51.402 li
cp
@
488.82 48.582 mo
164.16 48.582 li
164.16 229.962 li
488.82 229.962 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
488.82 48.582 mo
164.16 48.582 li
164.16 229.962 li
488.82 229.962 li
cp
0 gry
@
239.7 35.6219 mo
164.16 35.6219 li
164.16 49.2419 li
239.7 49.2419 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
239.7 35.6219 mo
164.16 35.6219 li
164.16 49.2419 li
239.7 49.2419 li
cp
0 gry
@
202.32 47.862 mo
238.32 47.862 li
238.32 37.062 li
202.32 37.062 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/1 
<<
/ShadingType 2 
/BBox [202.32 716.72 238.32 727.52 ] 
/ColorSpace /0 /CSA get_res
/Coords [202.32 727.52 238.32 727.52 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qsi\>m+q0nfB_DDjkIu~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bq>'j^q>'j^q>'j]q"XXZq"XXZq"XUXp\4FVp\4FVp\+=Sp@e4Rp@e4Rp%A"Np%A"N
p%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>naZ,<nF5r:nF5r:nF5o8
n*f`6n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.mHs<.mHs9,m-O**m-O**m-O'(lg*m&lg*m&lg*j$lK[["
lK[["lK[Wul07Hsl07Hsl07Eqkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggk2k^djlPUcjlPUc
~>
<~nF5r:nF5r:nF5r:n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.mHj3+m-O**m-O**lg*m&lg*m&
lg*m%lK[["lK[["lK[[!l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkND!ik2tggk2tggk2tde
jlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWio8tWio8qUiSibSiSibSiSi_Qi8EPO
i8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;
~>
<~iSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?
gt^]>gY:K;gY:K;gY:K:g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)
f%/F'f%/F'f%/C%e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@h
dF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa_\cHXVYc-=MXc-=MXc-4DUbfn;Tbfn;T
~>
]
>>
202.32 727.52 238.32 727.52 [202.32 716.72 238.32 727.52 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
0 gry
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Arial-BoldMT gcheck setglobal} if
3 434 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>Arial-BoldMT AddT42Char 
3 3958 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>Arial-BoldMT AddT42Char 
3 4736 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>Arial-BoldMT AddT42Char 
3 4976 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>Arial-BoldMT AddT42Char 
3 5714 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/a 68 def
/l 79 def
/o 82 def
/p 83 def
/s 86 def
end
Arial-BoldMT /Encoding get
dup 97 /a put
dup 108 /l put
dup 111 /o put
dup 112 /p put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/AWWROB+Arial-BoldMT*1 
[46{/.notdef}rp /period 50{/.notdef}rp /a /b /.notdef /d /e 
2{/.notdef}rp /h /.notdef /j /.notdef /l 2{/.notdef}rp /o 
/p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]
AWWROB+Arial-BoldMT nf
AWWROB+Arial-BoldMT*1 [7.2 0 0 -7.2 0 0 ]msf
167.76 44.5016 mo
(portals)
[4.39339 4.39339 2.79509 2.39178 3.99744 1.99585 0 ]xsh
284.34 80.262 mo
190.8 80.262 li
190.8 124.842 li
284.34 124.842 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.75294 .74902 .75294 colr
ef
284.34 80.262 mo
190.8 80.262 li
190.8 124.842 li
284.34 124.842 li
cp
@
266.34 67.3019 mo
190.8 67.3019 li
190.8 80.9219 li
266.34 80.9219 li
cp
ef
266.34 67.3019 mo
190.8 67.3019 li
190.8 80.9219 li
266.34 80.9219 li
cp
@
282.18 78.102 mo
188.64 78.102 li
188.64 122.682 li
282.18 122.682 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
282.18 78.102 mo
188.64 78.102 li
188.64 122.682 li
282.18 122.682 li
cp
0 gry
@
264.18 65.142 mo
188.64 65.142 li
188.64 78.762 li
264.18 78.762 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
264.18 65.142 mo
188.64 65.142 li
188.64 78.762 li
264.18 78.762 li
cp
0 gry
@
226.8 77.382 mo
262.8 77.382 li
262.8 66.582 li
226.8 66.582 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/2 
<<
/ShadingType 2 
/BBox [226.8 687.2 262.8 698 ] 
/ColorSpace /0 /CSA get_res
/Coords [226.8 698 262.8 698 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qsi\>m+q0nfB_DDjkIu~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bq>'j^q>'j^q>'j]q"XXZq"XXZq"XUXp\4FVp\4FVp\+=Sp@e4Rp@e4Rp%A"Np%A"N
p%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>naZ,<nF5r:nF5r:nF5o8
n*f`6n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.mHs<.mHs9,m-O**m-O**m-O'(lg*m&lg*m&lg*j$lK[["
lK[["lK[Wul07Hsl07Hsl07Eqkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggk2k^djlPUcjlPUc
~>
<~nF5r:nF5r:nF5r:n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.mHj3+m-O**m-O**lg*m&lg*m&
lg*m%lK[["lK[["lK[[!l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkND!ik2tggk2tggk2tde
jlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWio8tWio8qUiSibSiSibSiSi_Qi8EPO
i8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;
~>
<~iSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?
gt^]>gY:K;gY:K;gY:K:g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)
f%/F'f%/F'f%/C%e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@h
dF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa_\cHXVYc-=MXc-=MXc-4DUbfn;Tbfn;T
~>
]
>>
226.8 698 262.8 698 [226.8 687.2 262.8 698 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
0 gry
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Arial-BoldMT gcheck setglobal} if
3 1212 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>Arial-BoldMT AddT42Char 
3 2548 74 <00020054fe510460043e0023002f014e4062771d871d02120c0d7031860d
8031042001230223033001330233034001430243035b0f59145925562956
2b592f6b0ff811f813123b0d33163b28332c4b0d44164b28442cf00cfd17
0a8e0c010c0b0c0d0b2a0c0d270e1617152d0d0c171604182401b8ffc0b5
191b34013300b8ffc0b30e113e00b8ffc0b30b0c3e00b8ffc0b3282a3400
b8ffc0b323253400b8ffc0b331343400b8ffc04009151b34600001005f05
b80274b21f0f27b80274b20e0a2db80274400b15071819062a290b261a18
b80129400919191a1a8f31013101b801b8400a00332421121930583c182b
4e10f44dedf4ed4e1071f63c4d10ed10fde4003f3c3fed3fed3ffdf4722b
2b2b2b2b2bb10602435458b90000ffc0b30e113400b8ffc0b2090c342b2b
59e42b01111217390011123939111239390708103c313000715d015d7143
58400d690f691469256729662b692f065d59005d17051617163332373637
3635350623222726351000333217352111140e0223202635341314163332
36353426232206790141081d28566e3725130d7ec0d67d620101bfc58001
073e70bb8ffef2e2fc8360678e88686583462738151e211631235e9bacb5
8fd5010b011aad95fc47bcba6a3cb98e0e0283a99da19ea5a09d>Arial-BoldMT AddT42Char 
3 3280 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>Arial-BoldMT AddT42Char 
3 4502 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>Arial-BoldMT AddT42Char 
3 6840 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/c 70 def
/g 74 def
/i 76 def
/n 81 def
/u 88 def
end
Arial-BoldMT /Encoding get
dup 99 /c put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/AWWROB+Arial-BoldMT*1 
[46{/.notdef}rp /period 50{/.notdef}rp /a /b /c /d /e 
/.notdef /g /h /i /j /.notdef /l /.notdef 
/n /o /p /.notdef /r /s /t /u 
/v 137{/.notdef}rp]
AWWROB+Arial-BoldMT nf
AWWROB+Arial-BoldMT*1 [7.2 0 0 -7.2 0 0 ]msf
192.24 74.0217 mo
(culling)
[3.98952 4.38547 1.98792 1.98792 1.98793 4.38547 0 ]xsh
477.3 76.662 mo
319.68 76.662 li
319.68 160.122 li
477.3 160.122 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.75294 .74902 .75294 colr
ef
477.3 76.662 mo
319.68 76.662 li
319.68 160.122 li
477.3 160.122 li
cp
@
395.22 63.702 mo
319.68 63.702 li
319.68 77.322 li
395.22 77.322 li
cp
ef
395.22 63.702 mo
319.68 63.702 li
319.68 77.322 li
395.22 77.322 li
cp
@
475.14 74.502 mo
317.52 74.502 li
317.52 157.962 li
475.14 157.962 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
475.14 74.502 mo
317.52 74.502 li
317.52 157.962 li
475.14 157.962 li
cp
0 gry
@
393.06 61.542 mo
317.52 61.542 li
317.52 75.162 li
393.06 75.162 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
393.06 61.542 mo
317.52 61.542 li
317.52 75.162 li
393.06 75.162 li
cp
0 gry
@
355.68 73.782 mo
391.68 73.782 li
391.68 62.982 li
355.68 62.982 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/3 
<<
/ShadingType 2 
/BBox [355.68 690.8 391.68 701.6 ] 
/ColorSpace /0 /CSA get_res
/Coords [355.68 701.6 391.68 701.6 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qsi\>m+q0nfB_DDjkIu~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bq>'j^q>'j^q>'j]q"XXZq"XXZq"XUXp\4FVp\4FVp\+=Sp@e4Rp@e4Rp%A"Np%A"N
p%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>naZ,<nF5r:nF5r:nF5o8
n*f`6n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.mHs<.mHs9,m-O**m-O**m-O'(lg*m&lg*m&lg*j$lK[["
lK[["lK[Wul07Hsl07Hsl07Eqkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggk2k^djlPUcjlPUc
~>
<~nF5r:nF5r:nF5r:n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.mHj3+m-O**m-O**lg*m&lg*m&
lg*m%lK[["lK[["lK[[!l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkND!ik2tggk2tggk2tde
jlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWio8tWio8qUiSibSiSibSiSi_Qi8EPO
i8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;
~>
<~iSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?
gt^]>gY:K;gY:K;gY:K:g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)
f%/F'f%/F'f%/C%e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@h
dF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa_\cHXVYc-=MXc-=MXc-4DUbfn;Tbfn;T
~>
]
>>
355.68 701.6 391.68 701.6 [355.68 690.8 391.68 701.6 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
0 gry
AWWROB+Arial-BoldMT*1 [7.2 0 0 -7.2 0 0 ]msf
321.12 70.4217 mo
(tests)
[2.40692 4.01254 4.01254 2.40692 0 ]xsh
443.46 101.142 mo
349.92 101.142 li
349.92 145.722 li
443.46 145.722 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.75294 .74902 .75294 colr
ef
443.46 101.142 mo
349.92 101.142 li
349.92 145.722 li
443.46 145.722 li
cp
@
425.46 88.1819 mo
349.92 88.1819 li
349.92 101.802 li
425.46 101.802 li
cp
ef
425.46 88.1819 mo
349.92 88.1819 li
349.92 101.802 li
425.46 101.802 li
cp
@
441.3 98.982 mo
347.76 98.982 li
347.76 143.562 li
441.3 143.562 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
441.3 98.982 mo
347.76 98.982 li
347.76 143.562 li
441.3 143.562 li
cp
0 gry
@
423.3 86.022 mo
347.76 86.022 li
347.76 99.642 li
423.3 99.642 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
423.3 86.022 mo
347.76 86.022 li
347.76 99.642 li
423.3 99.642 li
cp
0 gry
@
385.92 98.262 mo
421.92 98.262 li
421.92 87.462 li
385.92 87.462 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/4 
<<
/ShadingType 2 
/BBox [385.92 666.32 421.92 677.12 ] 
/ColorSpace /0 /CSA get_res
/Coords [385.92 677.12 421.92 677.12 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qsi\>m+q0nfB_DDjkIu~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bq>'j^q>'j^q>'j]q"XXZq"XXZq"XUXp\4FVp\4FVp\+=Sp@e4Rp@e4Rp%A"Np%A"N
p%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSEo()ABo()ABo()>@naZ/>naZ/>naZ,<nF5r:nF5r:nF5o8
n*f`6n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.mHs<.mHs9,m-O**m-O**m-O'(lg*m&lg*m&lg*j$lK[["
lK[["lK[Wul07Hsl07Hsl07Eqkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggk2k^djlPUcjlPUc
~>
<~nF5r:nF5r:nF5r:n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.mHj3+m-O**m-O**lg*m&lg*m&
lg*m%lK[["lK[["lK[[!l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkND!ik2tggk2tggk2tde
jlPUcjlPUcjlPRajQ,C_jQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWio8tWio8qUiSibSiSibSiSi_Qi8EPO
i8EPOi8EMMhr!>Khr!>Khr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<gY:K;gY:K;
~>
<~iSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,GhVI#Dh;-oCh;-oCgt^]?gt^]?
gt^]>gY:K;gY:K;gY:K:g=k97g=k97g=k96g"G'3g"G'3g"G$1f\"j/f\"j/f\"g-f@SX+f@SX+f@SU)
f%/F'f%/F'f%/C%e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@h
dF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa_\cHXVYc-=MXc-=MXc-4DUbfn;Tbfn;T
~>
]
>>
385.92 677.12 421.92 677.12 [385.92 666.32 421.92 677.12 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
0 gry
true set_gvm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Arial-BoldMT gcheck setglobal} if
3 8496 92 <0001000efe510452042600130134b41228050113b8ffe040180c0f340816
0d0f3407160d0f3406160d0f3405160c0f3402b8ffc0401f1a3a34050606
040d0b0e061002001306041302040303010100061360100110b801af4012
0b0f0d2f0e280020153015601503f0150115b8ffc0b322263415b8ffc040
121c1e341517171a043903401819347f030103b80127400902401819347f
020102b801274012013900401c36342000300002001914c4a0182b4e10f4
5d2b4dfd19f45d2bf45d2b18fd4e456544e62b2b71724d10f4e4003fed5d
2f3f3c103c103c0112391139001112391239391139070e103c3130002b01
2b2b2b2b2b5d4bb010534bb03a515a58b2041000bafff00001fff0b10310
013838383859435c58b90005ffe8400e0d113f131013193f131012183f05
b8fff0b313193f05b8fff0b212183f012b2b2b2b2b59132113132101070e
032322272716333236370e012bfef80123fe89432543577f50514e194235
625e190426fd0e02f2fc02b95d623d2211dc0d735900>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/y 92 def
end
Arial-BoldMT /Encoding get
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/AWWROB+Arial-BoldMT*1 
[46{/.notdef}rp /period 50{/.notdef}rp /a /b /c /d /e 
/.notdef /g /h /i /j /.notdef /l /.notdef 
/n /o /p /.notdef /r /s /t /u 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
AWWROB+Arial-BoldMT nf
AWWROB+Arial-BoldMT*1 [7.2 0 0 -7.2 0 0 ]msf
351.36 94.9017 mo
(physics)
[4.39554 4.39554 3.8988 3.9996 1.99802 3.99957 0 ]xsh
285.06 171.702 mo
191.52 171.702 li
191.52 216.282 li
285.06 216.282 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.75294 .74902 .75294 colr
ef
285.06 171.702 mo
191.52 171.702 li
191.52 216.282 li
285.06 216.282 li
cp
@
267.06 158.742 mo
191.52 158.742 li
191.52 172.362 li
267.06 172.362 li
cp
ef
267.06 158.742 mo
191.52 158.742 li
191.52 172.362 li
267.06 172.362 li
cp
@
282.9 169.542 mo
189.36 169.542 li
189.36 214.122 li
282.9 214.122 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
282.9 169.542 mo
189.36 169.542 li
189.36 214.122 li
282.9 214.122 li
cp
0 gry
@
264.9 156.582 mo
189.36 156.582 li
189.36 170.202 li
264.9 170.202 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
ef
264.9 156.582 mo
189.36 156.582 li
189.36 170.202 li
264.9 170.202 li
cp
0 gry
@
227.52 168.822 mo
241.2 168.822 li
241.2 158.022 li
227.52 158.022 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/5 
<<
/ShadingType 2 
/BBox [227.52 595.76 241.2 606.56 ] 
/ColorSpace /0 /CSA get_res
/Coords [227.52 606.56 241.2 606.56 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qsi\An)3s-hY$3ioBFs~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'aq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q=sa[
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%7nK
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*]W3
mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O*)lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg!d#
lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[[!l07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
~>
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibRi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8<GL
hr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>JhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,G
h;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oBgt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gtUT<
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K:g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97
~>
]
>>
227.52 606.56 241.2 606.56 [227.52 595.76 241.2 606.56 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
241.2 168.822 mo
263.52 168.822 li
263.52 158.022 li
241.2 158.022 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
level3{
gsave
clp
[1 0 0 -1 0 764.582 ]ct
/6 
<<
/ShadingType 2 
/BBox [241.2 595.76 263.52 606.56 ] 
/ColorSpace /0 /CSA get_res
/Coords [241.2 606.56 263.52 606.56 ]
/Domain [0 1 ]
/Extend[ false false]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~oBFutjjreXe*5`8jkIu~>
/BitsPerSample 8
/Encode [0 4 ]
/Decode [0 1 0 1 0 1 ]
/Size [5 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 764.582 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o()ABo()ABo()ABo()ABnaZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6n*f`6n*f`5
mdBN2mdBN2mdBN2mdBN2md9E/mHs<.mHs<.mHs<.mHs<-m-O**m-O**m-O**m-O**m-F!'lg*m&lg*m&
lg*m&lg*m&lK[["lK[["lK[["lK[["lK[["l07Hsl07Hsl07Hsl07Hsl07Hrkih6okih6okih6okih6o
kih6nkND$kkND$kkND$kkND$kkND$kk2tggk2tggk2tggk2tggk2tggjlPUcjlPUcjlPUcjlPUcjlPUc
~>
<~kih6okih6okih6okih6okND$kkND$kkND$kkND$kk2tggk2tggk2tggk2tgfjlPUcjlPUcjlPUcjlPUb
jQ,C_jQ,C_jQ,C_jQ,C_jQ#:\j5]1[j5]1[j5]1[j5]1Zio8tWio8tWio8tWio8tWio/kTiSibSiSibS
iSibSiSibSi8EPOi8EPOi8EPOi8EPOi8EPOhr!>Khr!>Khr!>Khr!>Khr!>JhVR,GhVR,GhVR,GhVR,G
hVR,Fh;-oCh;-oCh;-oCh;-oCh;-oCgt^]?gt^]?gt^]?gt^]?gt^]?gY:K;gY:K;gY:K;gY:K;gY:K;
~>
<~g"G'3g"G'3g"G'3g"G'3f\"j/f\"j/f\"j/f\"j/f@SX+f@SX+f@SX+f@SX*f%/F'f%/F'f%/F'f%/F&
e^`4#e^`4#e^`4#e^`4#e^W*ueC<!teC<!teC<!teC<!se'ldpe'ldpe'ldpe'ldpe'c[mdaHRldaHRl
daHRldaHRldF$@hdF$@hdF$@hdF$@hdF$@hd*U.dd*U.dd*U.dd*U.dd*U.ccd0q`cd0q`cd0q`cd0q`
cd0q_cHa_\cHa_\cHa_\cHa_\cHa_\c-=MXc-=MXc-=MXc-=MXc-=MXbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
]
>>
241.2 606.56 263.52 606.56 [241.2 595.76 263.52 606.56 ]false false []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
0 gry
AWWROB+Arial-BoldMT*1 [7.2 0 0 -7.2 0 0 ]msf
192.96 165.462 mo
(util)
[4.38475 2.38315 1.9872 0 ]xsh
0 lc
1 lj
[3.6 2.16 ] 0 dsh
438.48 158.022 mo
438.48 163.062 li
@
438.48 165.222 mo
438.48 170.262 li
@
438.48 172.422 mo
438.48 177.462 li
@
438.48 179.622 mo
438.48 184.662 li
@
438.48 186.822 mo
438.48 191.862 li
@
438.48 194.022 mo
438.48 199.062 li
@
438.48 201.222 mo
438.48 203.382 li
435.6 203.382 li
@
433.44 203.382 mo
428.4 203.382 li
@
426.24 203.382 mo
421.2 203.382 li
@
419.04 203.382 mo
414 203.382 li
@
411.84 203.382 mo
406.8 203.382 li
@
404.64 203.382 mo
399.6 203.382 li
@
397.44 203.382 mo
392.4 203.382 li
@
390.24 203.382 mo
385.2 203.382 li
@
383.04 203.382 mo
378 203.382 li
@
375.84 203.382 mo
370.8 203.382 li
@
368.64 203.382 mo
363.6 203.382 li
@
361.44 203.382 mo
356.4 203.382 li
@
354.24 203.382 mo
349.2 203.382 li
@
347.04 203.382 mo
342 203.382 li
@
339.84 203.382 mo
334.8 203.382 li
@
332.64 203.382 mo
327.6 203.382 li
@
325.44 203.382 mo
320.4 203.382 li
@
318.24 203.382 mo
313.2 203.382 li
@
311.04 203.382 mo
306 203.382 li
@
303.84 203.382 mo
298.8 203.382 li
@
296.64 203.382 mo
291.6 203.382 li
@
289.44 203.382 mo
284.4 203.382 li
@
2 lc
[] 0 dsh
282.96 203.382 mo
293.76 199.782 li
@
282.96 203.382 mo
293.76 206.982 li
@
347.04 212.862 mo
375.18 212.862 li
375.18 204.822 li
347.04 204.822 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
f
0 gry
true set_gvm
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c796607022dca000094e0000822cc68656164d6144b3e00000df00000
003668686561123315fe00000e2800000024686d7478f65efffb00000e4c
000034d46c6f6361361cd72000004320000034d86d617870124c05df0000
77f8000000206e616d659617a74000007818000011057072657025d64dbf
0000892000000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
00000005028fa58dc35f5f0f3cf5081b080000000000a2e3272a00000000
c14fd713faaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d35
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00140400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7008901c7
0089029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0044046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fdac0000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fdac0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a008c04600088062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7006604000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000b0400001a072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a0b010063091c004406aa005c04e600440987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000feaa0000fead0000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f6008806060066042b005005c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c70088000000000000
002a0000002a0000002a0000002a000000d60000017e00000320000005a6
0000074e000009380000097e000009fe00000aa400000b8400000bec0000
0c6400000caa00000ce600000d5600000f1200000fee00001218000013f2
000015520000170c000018e20000198e00001c2200001e5600001eb20000
1f7000001ff200002062000020e8000021da000023da000025840000271c
000028560000299e00002a6200002b1800002ca800002dae00002e920000
2f7a000031b00000323a000035640000370e000038420000394800003b3c
00003da800004052000041000000422400004398000045d6000048e20000
4a8800004bc800004c3200004c9c00004d0000004d8800004dbc00004e38
0000510a000052e80000549c000056500000580e0000596200005b520000
5cf600005dea00005f020000619a00006296000064c60000668c0000684e
00006a1200006ba800006cae000070560000717a00007318000075360000
79a000007bc400007e1c00008004000081020000814e00008250000082f0
0000833c00008370000083ac000083ee000084540000849a000084ce0000
85040000853a0000858a000085cc0000861e00008656000086a8000086de
0000871e000087600000879e000087e800008828000088560000888e0000
88de00008914000089540000898e000089d200008a1c00008a5800008a88
00008acc00008b0400008b9400008c1a00008e2800008fbc0000916c0000
91b80000924c00009470000096c4000098b4000099a000009a2200009a8c
00009baa00009d0600009f4e0000a0b00000a13e0000a1e80000a2ac0000
a3f40000a59e0000a68c0000a7520000a7b60000a8240000a94e0000aa72
0000ab020000ace40000af3e0000b2900000b3860000b42c0000b47c0000
b5320000b6520000b7f00000b88a0000b94e0000ba0e0000ba760000bab2
0000bb0a0000bb580000bd700000bfb60000bfee0000c0200000c14a0000
c2760000c3240000c3c80000c46a0000c53c0000c5900000c5c60000c61e
0000c7700000c7e20000c83c0000c9b40000cb200000cc000000cc320000
ccce0000cdf20000d0680000d0a20000d0e60000d1220000d1840000d1c6
0000d20c0000d2580000d28a0000d2de0000d31c0000d34c0000d38a0000
d3d00000d4120000d4500000d4d20000d5400000d6260000d6620000d6e2
0000d7160000d7b80000d8400000d8ac0000d90e0000d97a0000da660000
db580000db8c0000dbc00000dbf00000dc340000dcac0000de260000e040
0000e0720000e0ac0000e1a60000e3340000e36a0000e4ce0000e54a0000
e62a0000e7200000e8b00000ea1a0000ec080000ed040000ed4a0000ed7e
0000edc00000edfa0000ee4e0000ee960000eee00000ef100000ef400000
f1280000f1660000f18e0000f1be0000f1f20000f2180000f23e0000f286
0000f43c0000f5b60000f5dc0000f6020000f6460000f6760000f6a60000
f6fc0000f7da0000f8ec0000f9300000f9660000f9c00000f9fe0000fa32
0000fa620000fa9e0000fade0000fb1c0000fb580000fb9a0000fbd00000
fc0c0000fc4c0000fc720000fc960000fce60000fe420000fe980000fecc
0000ff1a0000ff660000ffa80000ffe0000100160001005e000101000001
029c00010464000105e6000107d80001092a00010aae00010b9000010d2a
00010d9400010dbc00010e5a000110dc0001111c0001115c0001119c0001
11da000112380001129600011304000113240001140e000114ae000114e4
000115320001157c000115c6000115e2000115fe0001161e0001163e0001
165e0001167e000116a4000116ca000116f000011716000117460001176e
00011796000117c2000117ee000118220001184c00011878000118ae0001
18d8000119040001193a000119640001198e000119c2000119f200011a26
00011a6a00011a9a00011ace00011b1000011b4400011b7600011bb80001
1bec00011c1c00011c5e00011ca200011ce800011d4400011d6000011d7c
00011d9800011db400011dd000011f3e000121ea0001245a000124760001
2490000124ac000124c8000124e4000125000001255c0001259600012600
000126ca0001276a00012840000128c000012948000129b800012a4e0001
2aac00012af200012b5000012bb200012c6a00012d2800012d5400012db0
00012df400012f60000130540001307e0001309a000130c6000130fe0001
314a0001318a000131be000131ee0001321e0001324e00013292000132c2
000132f2000133320001336200013392000133c200013402000134320001
346200013492000134b8000136bc000136ec0001371c0001386c00013a22
00013a5200013a8000013ab000013ade00013b0e00013b3c00013b600001
3b8400013bb400013d2400013d5c00013d8c00013f1e00013f4c00013f7a
00013fa800013fd00001412e000142c6000142fe0001433e0001437a0001
43aa000143d8000143f4000144240001445400014544000146ac000146dc
000147160001475600014786000147b6000147f80001481e000148440001
4884000148c4000148f40001493400014a1e00014a9e00014b8200014bb2
00014be200014c1200014c4200014c7e00014cb000014ce200014d120001
4d4200014d8800014dba00014dea00014e2000014e9200014ec600015094
000151960001532600015556000157a6000159380001599c00015a260001
5a3600015ac400015cc200015dee00015f5a0001604a000161ce000163e8
000166140001670600016716000167260001683e0001684e0001685e0001
686e0001687e0001688e000169ac000169bc000169cc00016a4000016a50
00016b2000016b3000016c4200016c5200016c6200016c7200016dd00001
6fae00016ff0000170260001705c0001708c000170bc0001711000017138
000172c20001740a0001755e000176c60001784a000178ae00017a400001
7b5c00017b6c00017b7c00017d0200017d1200017e7800017fd200018106
00018264000183d200018598000185d800018610000186460001866c0001
869c000186c200018838000188680001899e000189ae000189be00018a00
00018a1000018ba400018d5000018eda00018f0200018f320001908e0001
909e000191d6000191e600019280000193e0000193f000019656000197e0
000199480001997800019aee00019c2000019c3000019c4000019c500001
9d2a00019d3a00019d4a00019d5a00019e5200019fcc00019fdc0001a104
0001a2380001a38a0001a51e0001a63c0001a7c80001a8da0001a9100001
ab460001abe60001abf60001ad8c0001af2e0001afb20001b1340001b144
0001b3ac0001b52c0001b6ac0001b6dc0001b87c0001ba020001bbc60001
bcf20001bd020001be320001be420001be520001bf120001bf220001c108
0001c1180001c24e0001c35c0001c5080001c6be0001c8000001c9700001
cab80001cb0a0001ccec0001ce680001cea60001d04c0001d0700001d1b0
0001d1c00001d1d00001d2080001d2180001d3a40001d50c0001d6800001
d6a40001d6d40001d8420001d8f40001d9b20001d9e00001db960001dc8e
0001dd1c0001de420001def00001dfc40001e00e0001e0860001e1460001
e16e0001e1b20001e2080001e2e40001e32e0001e3620001e38a0001e3b2
0001e3e60001e42a0001e46e0001e4ac0001e5ea0001e6a20001e7c20001
e8380001e9060001e9580001e9ea0001ea9a0001eb8e0001ebe20001ec78
0001ed360001ee200001eed20001eff20001f0440001f0ee0001f2240001
f2fc0001f3e20001f4e80001f5ce0001f6b00001f7a40001f8420001f948
0001fa420001faba0001fb320001fba80001fbde0001fc3a0001fd020001
fd8e0001fdc60001fe0c0001fe3c0001fea60001ff660001ff9a0001ffca
0001fffe0002002e0002005e0002008e0002022e00020266000202a60002
02de00020316000203b2000204ac000204dc00020580000205ae000205ee
0002063e0002066e000206ba00020852000209b800020b1800020b5e0002
0bb200020bea00020d5c00020d9200020e2400020e6200020e9000020ece
00020ffe0002102600021162000211f20002129c0002131e000213da0002
14f20002160000021634000216ba0002181600021898000218e2000219ec
00021a3400021b3800021bb400021c0c00021c9000021d7a00021e900002
1f8c0002203600022126000221f8000222e2000223ca0002247a000224fc
0002275a00022784000227ae0002286600022890000229d200022ad80002
2bc200022bec00022c1600022c4000022c6a00022c9400022e1400022e3e
00022e6800022e9200022ebc00022ee600022f1000022f3a00022f640002
2f9800022fc200022fec0002301600023190000231a0000232ba000232ca
000232f40002331e00023348000233720002351c00023738000238660002
3876000239f200023a0200023b4800023d1400023e1a00023f9a0002413a
0002435e000244b80002469a000247de0002490c000249fa00024a240002
4a4e00024a7800024aa200024acc00024af600024b2000024b4a00024b74
00024b9e00024bc800024bf200024c1c00024c4600024c7000024eac0002
50280002516c000253540002549c000254c6000254f00002552000025550
000255a0000255f000025630000256a2000256f600025754000257aa0002
57e00002582200025868000258b2000258e20002591a0002594a00025a82
00025dc800025df200025e1c00025e4600025e7000025e9a00025ec40002
5eee00025f1800025f4200025f6c00025f9600025fc000025fea00026014
0002603e0002606800026092000260bc000260e6000261100002613a0002
61640002618e000261b8000261e20002620c0002623600026260000262fe
000263140002633e0002661e0002662e000267480002686a000269a80002
6aea00026c9000026ca000026de200026f3200027122000272f60002740e
0002741e000274a00002752e0002762e0002763e000276de000276ee0002
78040002795600027a8600027a9600027b6400027b7400027cea00027cfa
00027e0e00027e1e00027f52000280e8000281a4000281b4000282b20002
840c00028498000284a8000285d20002875e0002881a0002882a000288c6
000288d6000289a4000289b400028a8c00028a9c00028ba400028bb40002
8d7a00028d8a00028ee200028ef20002915c0002916c0002936600029376
000294e0000294f0000295e0000295f00002978800029798000298b60002
98c600029a0600029a1600029a2600029a3600029bae00029bbe00029bce
00029bde00029d3000029e7e00029f4c0002a0300002a1b00002a3320002
a4320002a5460002a68a0002a69a0002a7880002a8620002a9fe0002aa0e
0002ab2c0002ac320002ae300002ae400002ae500002ae600002afaa0002
afba0002b0720002b0820002b1900002b1a00002b28c0002b29c0002b3ba
0002b3ca0002b4680002b4780002b4880002b5760002b6ea0002b8160002
b9100002b9200002b9300002b9400002bade0002bc980002bd660002bd76
0002bfd60002c21c0002c4a20002c7060002c98a0002cbfc0002cdcc0002
cf820002cfac0002cfd60002cfe60002cff60002d0200002d04a0002d074
0002d0840002d0940002d0be0002d0e80002d0f80002d1080002d1320002
d15c0002d1860002d1960002d1a60002d1b60002d1c60002d1d60002d1e6
0002d2100002d2200002d2300002d25a0002d2840002d2ae0002d2d80002
d3020002d32c0002d3560002d3800002d3aa0002d3d40002d3fe0002d428
0002d4520002d47c0002d4a60002d4d00002d4fa0002d5240002d54e0002
d5780002d5a20002d5cc0002d5f60002d6200002d64a0002d6740002d69e
0002d6c80002d6f20002d71c0002d7460002d7700002d79a0002d7c40002
d7ee0002d8180002d8420002d86c0002d8960002d8c00002d8ea0002d914
0002d93e0002d9680002d9920002d9bc0002d9e60002da100002da3a0002
da640002da8e0002dab80002dae20002db0c0002dbac0002dbf00002dc66
0002dc900002dcba0002dce40002dd0e0002dd380002dd620002dd8c0002
ddb60002dde00002de0a0002de340002de5e0002de880002deb20002dedc
0002df060002df300002df5a0002df840002dfae0002dfd80002e0020002
e02c0002e0560002e08a0002e0be0002e0f20002e2840002e4200002e5bc
0002e7480002e78e0002e7d40002e8420002e89e0002e8f00002e9600002
ea380002eb040002ebdc0002eca80002ed480002ee620002ef160002ef98
0002eff20002f0320002f1500002f29a0002f4320002f48e0002f4ec0002
f5480002f5a40002f6580002f70e0002f7ba0002f8660002f9120002f9ca
0002fa820002fb3a0002fb4c0002fb5e0002fb700002fb820002fb940002
fc020002fc700002fd280002fd3a0002fd4c0002fd5e0002fd6e0002fd80
0002fd920002fda40002fdb60002fdc80002fdda0002fe880002ff340002
ffe20003008e00030126000301600003018a000301b4000302080003025a
000302d6000303200003039c000303f000030474000304c60003053c0003
0594000305fa00030650000306aa0003072800030774000307d200030836
00030884000308d20003092a000309720003099c000309ca000309f00003
0a2400030a5400030a8400030ad600030b4400030b9a00030c0e00030c62
00030cd600030d1c00030d8400030dca00030e2600030e5600030e900003
0eb600030ee600030f0c00030f3200030f6400030f9400030fe60003104c
000310a2000311080003115c000311ca0003120c0003126c000312ae0003
12fa0003133400031370000313aa000313e60003141a0003144c0003147c
000314ac000314d6000314fc00031526000315540003157e000315ca0003
160e0003164400031680000316b4000316e200031720000317500003178a
000317b4000317e2000318080003182e0003185a000318b6000318e60003
1916000319460003197e000319b2000319e000031a1000031a4000031a70
00031aa000031ad400031b2a00031b5e00031bbe00031bf200031c4a0003
1c7e00031cda00031d7800031e4600031f660003202e000320be00032154
000323400003253c000326b400032830000329da00032b8c00032c740003
2daa00032ea200032fb4000330d20003320800033372000334e000033676
000337f2000339020003391200033a3e00033b7a00033cbc00033e400003
3f1a00033f9000034046000340ec0003425c000342940003430e000343d0
0003448a000344f2000345f80003472e000347fa00034958000349d20003
4a4c00034b1800034bd200034c8600034ce200034d3c00034d8400034df4
00034e7000034eba00034ef400034f3a00034f7e00034fd0000350220003
50a40003512600035168000351a8000351de000352140003524200035270
000352a4000352d80003531a0003535c00035398000353d40003540e0003
54480003547a000354ac000354de000355100003554a00035584000355c6
000356080003564a0003568c000356da000357280003576a000357ac0003
57ec0003582c00035866000358a0000358ec0003593800035976000359b6
000359fc00035a4200035a7e00035ad400035b1000035b4c00035b8c0003
5bcc00035c0800035c4400035c8400035cc400035d0800035d4c00035da0
00035e2e00035e7000035eb200035f1a00035f8200035fb400035fe60003
601e00036056000360ec00036182000361cc00036216000362520003628e
000362e40003633a00036384000363ce000364260003647e000364be0003
64fe000365360003656e000365b800036602000366400003667e000366c0
0003670200036756000367aa000367f0000368360003687c000368c20003
69180003696e000369c400036a1a00036a6600036ab200036afe00036b4a
00036bbe00036c3200036ca600036d1a00036d5800036d9600036dd40003
6e1200036e5000036e8e00036ed200036f1600036f6200036fae0003700e
0003705a00037098000370e6000371f60003724600037296000372ce0003
73060003735c000373b2000374260003748a000374cc0003750e00037564
000375b2000375fe0003764a0003768a000376ca000377120003775a0003
77c6000378200003785800037890000378d000037910000379e000037adc
00037b9c00037c8a00037ce000037d3600037d8800037ddc00037e400003
7ea400037efa00037f5000037fc60003803c0003807e000380c000038102
0003814400038186000381c80003821e00038274000382c60003831a0003
83a200038424000384c400038566000385a4000385e2000386200003865c
0003869a000386d80003871600038752000388360003892200038a380003
8b5400038c1e00038ce800038de200038edc00038fda000390d8000391f6
000393140003943a000395600003966200039764000397f6000398880003
98c6000399040003995e000399b8000399f000039a2800039b3800039b48
00039b9000039bd800039c3000039c8800039cba00039cec00039d2e0003
9d7000039daa00039de400039e2800039e6c00039ee400039f5e00039fee
0003a0320003a0720003a0f40003a1760003a2ce0003a2de0003a32c0003
a37a0003a3b60003a3f20003a4380003a47e0003a4cc0003a51a0003a56a
0003a5ba0003a6160003a6720003a7e80003a9500003a9880003a9c20003
aa0e0003aa5a0003aaac0003aafe0003ab500003aba60003abe20003ac1e
0003ac740003acc80003ae000003aea00003aeee0003af2e0003af680003
b0fe0003b3820003b4460003b5dc0003b73a0003b8080003b9ae0003bc02
0003be3a0003be800003beb20003bf5c0003c0800003c0a40003c13e0003
c24a0003c35a0003c46a0003c5780003c6fe0003c7300003c7d20003c7fa
0003c85c0003c8be0003c9200003c9820003c9c00003c9fe0003ca380003
ca720003ca9e0003caea0003cb240003cb5e0003ccba0003ce0e0003ce1e
0003cedc0003d0120003d0700003d1880003d3160003d3bc0003d5020003
d5400003d57e0003d5bc0003d6100003d6380003d6920003d6f60003d73e
0003d7a00003d8000003d8720003d8ee0003d96a0003d9ec0003da780003
db040003db8e0003dc0e0003dc480003dc840003dde80003deb20003dee2
0003df120003e04a0003e19a0003e1aa0003e2980003e36c0003e4640003
e55a0003e6dc0003e8360003e8460003e95e0003ea0a0003eb4c0003eca2
0003ecfe0003ee5c0003eeea0003f0900003f2020003f3160003f34e0003
f3b20003f5620003f6cc0003f72e0003f8960003f99c0003fa520003fafe
0003fc260003fd140003fdf40003ff34000400600004017a000402ea0004
046400040474000405540004064a000406fa000407f6000408a2000409ac
00040a9800040bc200040ce600040dea00040f1800041056000411c20004
12f80004148c000416340004172c000418400004197200041a6400041a9c
00041af200041ba000041bb000041c1200041c6e00041cd400041d200004
1d6000041d9800041dc400041df200041e2c00041f6200041f960004201a
000420d00004210000042184000421b4000421ec00042384000425100004
255a00042594000425ea000426360004265c00042682000426c400042706
0004274800042778000427b0000427e60004281c0004285e0004288e0004
28be000429b400042ab800042aec00042b2400042b6a00042b9e00042bce
00042c0600042c3a00042c6e00042c9e00042cce00042d0400042d3a0004
2d6a00042d9a00042dce00042e0200042e3200042e6200042e9c00042ed0
00042f0200042f3400042f6800042f9c00042fcc00042ffc0004302a0004
305800043166000432d2000434060004353a0004356a000435a40004363e
000437a800043904000439c800043adc00043b0c00043b4000043c380004
3de800043e4000043eb800043ff400044032000440a4000440d400044104
0004413e000441c6000441f600044226000443b6000445000004460c0004
471a000448460004499c00044af800044c5800044d9200044f0400045064
000450740004522a00045352000453ec0004557400045584000456800004
58060004595e00045a1000045ae000045bec00045c9600045cce00045cde
00045d8e00045e3400045eb000046000000460f4000461ea000462f60004
63ce000464a80004653c0004664e000467de000468fc000469f200046a9c
00046b4600046c1000046cb800046d8e00046e0a00046e6600046fc80004
70fc000472980004735a0004745a00047532000476700004771c000477e6
000478d6000479fc00047ad800047bde00047d1600047e0600047ea40004
7f960004810600048250000484bc0004858e000486420004871000048804
000489420004895200048a8600048b9800048ba800048cb400048de40004
8e3800048fac000490d4000491e80004939a000495ae00049842000499fc
00049b2800049d0800049eca0004a05c0004a1280004a2c40004a33a0004
a3e80004a4c40004a5500004a5f20004a6940004a7780004a8b00004ab0c
0004ac540004ac640004ac740004acd60004ad340004ad960004ae340004
aecc0004afd00004b0be0004b0ce0004b0de0004b1780004b2120004b24e
0004b2ca0004b33e0004b3940004b3c80004b44e0004b4da0004b5520004
b5b00004b64a0004b6dc0004b75c0004b7de0004b8720004b8a60004b908
0004b9ba0004bb800004bbb80004bd940004bea80004beb80004beee0004
bf320004bf760004bfba0004bff00004c0220004c0640004c1000004c156
0004c1fc0004c2740004c2fa0004c36a0004c3cc0004c4520004c4b20004
c51c0004c5900004c6000004c65e0004c7040004c79c0004c8080004c898
0004c8f60004c9640004ca0c0004cab80004cb4e0004cbb80004cc3a0004
cc9e0004cd4a0004ce020004ceae0004cf3c0004cf980004d0040004d05a
0004d0dc0004d15a0004d1e00004d26c0004d2c60004d3320004d3a20004
d4120004d4820004d5060004d5960004d5fc0004d6760004d6f20004d76a
0004d8100004d8ac0004d93c0004d99a0004da380004dab40004db460004
dbe80004dc920004dd2a0004dd860004dddc0004de440004deea0004df92
0004e05c0004e1020004e1640004e1bc0004e21c0004e2aa0004e3300004
e3be0004e41e0004e4820004e4ec0004e5540004e5bc0004e63a0004e6c2
0004e7560004e7c20004e82a0004e88e0004e9360004e9f00004ea9e0004
eb2c0004eb8a0004ebf60004ec660004ed0c0004edb60004ee780004ef1a
0004ef7e0004f00e0004f0800004f1100004f18e0004f20a0004f2760004
f3040004f3600004f3be0004f4440004f4c00004f5280004f58c0004f5e0
0004f64e0004f6b60004f7340004f7aa0004f8240004f8a40004f9000004
f9660004f9ca0004fa6a0004fb0c0004fbc20004fc720004fcce0004fd46
0004fda40004fe2e0004fec60004ff560004ffbc0005001a000500a80005
011a000501ae00050246000502b6000503260005039e000503fc0005045c
000504d60005053000050590000505ea00050646000506ae0005073c0005
0772000507aa0005083600050860000508a20005093600050a2400050ab4
00050aea00050b3a00050bac00050c5800050cea00050d4200050d9c0005
0df400050e4e00050ed200050f5800050ffc000510a4000510e200051152
000511e60005127e00051314000513be000513f000051440000514940005
14da0005157e000516080005168e000516ee000517320005178000051820
000518b000051950000519f600051a9c00051b6000051b9200051bbc0005
1c4200051cf200051d2400051d4c00051e1a00051e7800051f1200051f60
00051fc60005206e000520dc00052142000521ce00052240000522b60005
236a000523c40005243400052470000524c200052548000525a80005264c
0005272c00052854000529e400052a4000052a9600052dbc00052e560005
2eb200052efa00053068000531ba000532000005330e000533a6000534b4
000535be0005366000053748000537da000538760005396800053a680005
3ae400053b6a00053bb200053d2400053e8000053f6400053fb400053fe8
000540d6000541fe00054398000544c8000545de000547120005482e0005
489c0005493000054a7000054b2600054c9000054dc000054ef20005501e
000550ca0005519000055262000553bc0005553c0005566c000557880005
594200055a9400055b8000055c5c00055d1e00055e8800055fd800055fe8
00055ff800056008000560c000056176000561b2000561e8000562200005
6256000563e2000565f6000566e0000567f80005697000056ade00056bc8
00056cfa00056e4200056fc800057166000572ba000574a80005766e0005
78a400057af200057bda00057cb600057dfe00057f800005806800058182
000581c40005820e0005842a000586420005878e0005890400058b620005
8d6400058de800058e1800058e6400058f2c00058ffc0005919000059218
00059280000592c0000592fe000594b0000596e000059816000599f80005
9ad400059bee00059d9a00059fa60005a0a80005a1940005a3860005a58e
0005a6fa0005a87e0005a9de0005ab4c0005abda0005ac6a0005ad840005
ae900005b0520005b1be0005b3ae0005b5780005b60c0005b6a80005b73e
0005b7c60005b8ac0005b9840005bb1e0005bcb00005bcd60005bcfc0005
bd0c0005bd3c0005bd6c0005bee60005c0880005c1320005c2140005c2d4
0005c37e0005c4180005c4fa0005c5b80005c6940005c84a0005c9840005
ca100005ca400005ca700005caa40005cad80005cae80005caf80005cb28
0005cb580005cb8c0005cbc00005cbf40005cc280005cc5c0005cc900005
ce0a0005ce1a0005ce4a0005ce7a0005ceb20005cee60005cf1a0005cf4e
0005cf820005cfb60005cfea0005d0220005d0580005d0880005d0c80005
d1000005d1480005d18e0005d1c20005d1f60005d2300005d2680005d308
0005d3180005d46a0005d6320005d7d80005d9820005dace0005dbe40005
dcf20005de080005df020005dfea0005e10c0005e2080005e2e00005e3d0
0005e48c0005e53e0005e6080005e67a0005e7200005e7b00005e8140005
e9220005e9880005ea360005eb2c0005eb940005ebfc0005ecac0005ee86
0005ef8a0005f00a0005f0480005f0f40005f1820005f26a0005f3020005
f3680005f4660005f5280005f5e20005f6200005f6b00005f7b20005f846
0005f88a0005f9a80005fad20005fcb40005fe760005ffac000600da0006
01da000602020006022a0006026000060292000602be000602e60006030e
0006033c0006039a000604080006044000060478000604a8000604ce0006
0502000605380006055e00060584000605b2000605e00006060c00060682
000606aa0006070c00060732000607580006077e000607a4000607d40006
0804000608340006086e0006089e000608d400060904000609360006095c
00060982000609b6000609ec00060a1c00060a4c00060a7200060a980006
0abe00060aec00060b2000060ba600060bea00060c2400060c5800060c9c
00060cd600060d1000060d3600060d6000060dac00060dee00060e140006
0e4200060e6800060e8e00060ece00060f0000060f3000060f6000060f86
00060fac00060fdc0006100c00061032000610580006107e000610a40006
10ca000610f000061118000611a0000611ca0006123e00061266000612dc
000613040006136600061398000613ca000613fa00061432000614640006
1492000614cc000614f40006155400061596000615c6000615f200061622
000616520006167a000616a2000616ca0006172c00061754000617b20006
17f60006183a0006186a000618a0000618c6000618ee000619140006193c
000619620006198a000619b2000619dc00061a0200061a2800061a4e0006
1a8000061aa800061b2e00061b5800061bc200061bf200061c2200061c48
00061c6e00061cc600061cf600061d3200061d5c00061d8c00061dbc0006
1df000061e2400061e5400061e9400061ece00061f1600061f3c00061f62
00061f8800061fae00061fd4000620140006205400062090000620c00006
20f0000621200006215000062188000621c000062200000622400006227a
000622b4000622f00006232e00062378000623c2000624080006244e0006
2490000624d20006250200062532000625660006259a000625d40006260e
0006265a000626a6000626fe00062756000627ae0006280c0006283c0006
286c000628a2000628d80006290e0006294a0006297e000629b200062a06
00062a5a00062aae00062b0200062b5600062baa00062c0200062c5a0006
2c8800062cb600062ce800062d1a00062d6000062da600062dd800062e0a
00062e5c00062eb400062ef800062f3c00062f8000062fc4000630180006
306c0006309c000630cc000631020006313800063176000631bc00063210
0006325a000632ac000632fe0006335e000633be000633ee000634200006
345a00063494000634e60006353a00063584000635cc0006360e00063678
000636c6000637120006374400063776000637aa000637de000638140006
384a00063888000638be000638f00006392c00063982000639d800063a36
00063a9400063aea00063b4000063b7400063ba400063be800063c1e0006
3c4e00063c9200063cd000063d0800063d4000063d7600063db200063de2
00063e1e00063e5e00063ea400063eee00063f3a00063f8600063fdc0006
403200064080000640ce0006411c0006416c000641c8000642240006427c
000642d4000643280006437c000643be0006440000064448000644900006
44d8000645260006456a000645ae000646140006467a000646e000064746
000647ac000648120006487c000648e60006492e00064976000649be0006
4a0600064a5200064a9e00064af200064b3e00064b8200064bd000064c38
00064ca000064d1000064d8000064de800064e5000064e9000064ece0006
4f1800064f4200064f8800064fc00006500e0006503e0006506e000650aa
000650de000651040006515800065196000651ea000652d0000653f80006
543a00065460000654b6000654e60006552800065570000655be00065608
000656580006567e000657660006584a0006599c000659ca000659f80006
5a8c00065b1200065b4000065bca00065bfa00065c2a00065c7800065cc6
00065daa00065e8600065fca00065ffa0006602a000660c0000661480006
6178000661a8000661d80006626800066298000662c80006631a00066362
000663b80006644e000664e60006655a000665ac000665d60006662c0006
6660000666aa000666e20006673200066770000667bc000667e20006685e
000668b0000669c200066bcc00066d8000066f0200067074000673160006
75e6000677a6000678ec00067b4600067c8800067e9e00067ef000067f40
00067f9600067fec0006804e000680d600068324000684b6000686c20006
87de0006899200068b1400068bd400068cb600068d1e00068d8000068df6
00068e5e00068f0a00068f7a0006900a0006911e000691e20006922e0006
92c40006937000069414000694be000695080006954a000695c000069628
000696b800069766000697d0000698340006989a00069954000699ea0006
9a4800069a7200069a9c00069aac00069abc00069b7e00069c8200069e8c
00069fe200069ff20006a0a20006a1860006a1e60006a1f60006a2520006
a2b00006a3d00006a4be0006a4ce0006a4de0006a4ee0006a4fe0006a5e4
0006a6e40006a8bc0006aa780006ab7e0006abf80006ac720006ad240006
ad340006ae420006ae520006ae620006af240006b0580006b1440006b154
0006b1640006b1740006b2da0006b4460006b5720006b5820006b5920006
b5a20006b5b20006b6940006b6a40006b8060006b9100006ba0e0006bb46
0006bc180006bc960006bd140006be340006beb00006befc0006bf880006
c09c0006c0f00006c2320006c2f20006c3be0006c4b40006c5be0006c670
0006c7d60006c83c0006c9000006cb020006cc900006ce0e0006cf3e0006
d1f00006d3320006d4600006d5d80006d7500006d8d00006da5e0006dc10
0006dc7e0006dde20006df1a0006e01e0006e1540006e2860006e3560006
e4260006e5820006e65c0006e6fc0006e8000006e92a0006ea280006eba8
0006ed120006ee500006efc80006f1140006f1f60006f25e0006f3000006
f3a00006f49e0006f6060006f7400006f8d40006fa1e0006fb020006fb60
0006fc660006fcfc0006fdbe0006fe640006fea400070050000701220007
01e800070310000704b0000705bc00070614000707ac0007083a0007084c
0007087c000708ac000708e40007091c000709520007098e000709c40007
0a0000070b6e00070bb800070c5200070cea00070d6400070de800070e4e
00070efa00070f46000710660007111c000711f20007122a000712680007
12dc000713d6000714f4000715f6000716380007167a000716e8000716f8
000717080007171800071728000717380007174800071758000717680007
17780007178800071798000717980007191c0007192c000719ec00071ab2
00071be800071dde00071fe0000721dc00072412000726120007267e0007
27900007292200072a7a00072b2c00072b7000072c0e00072d3e00072d8e
00072e2400072f6000072f70000731260007325a000732aa000733000007
33c20007340600073448000734ce0007352c0007361e000736ac000736e2
0007375c000737d4000738240007393000073a2600073ad000073afa0007
3b2400073b4e00073b7800073bb800073bf800073c3000073c6800073cb2
00073cfc00073d3c00073d7c00073dc600073e1000073e5000073e900007
3eea00073f4400073f7e00073fb800073ffc0007404000074084000740c8
0007411c00074170000741bc00074208000742460007428a000742da0007
432a00074384000743e20007440c00074436000744d00007456a000745ae
000745f2000747080007471800074760000747a8000747fa0007484c0007
48b60007490a00074956000749b400074a3e00074aa200074ae600074b30
00074b9800074be200074c2200074c6a00074ca600074ce200074d1e0007
4d5800074d9a00074ddc00074e1c00074e5c00074ea600074ef000074f46
00074f9e00074fec0007503a0007507c000750ca0007510c000751560007
5198000751dc0007523800075294000752e00007532c00075376000753c0
000753fe0007543c000754ba0007553800075572000755ac000756460007
56e0000757b400075888000758e400075940000759b400075a2800075b86
00075b9600075c8000075c9000075cc600075cfc00075d3600075d700007
5dac00075de800075e2e00075e7400075fda00076190000762dc0007649a
00076610000767b8000768e8000769ee00076c0c00076d5000076ee60007
706e000770ec0007723000077438000774cc00077560000776b4000777de
0007795800077a9800077c0400077cf200077ebc00078050000780d20007
8204000782ee0007845600078538000786ee000787e00007894200078a7e
00078b7200078d3600078ebe00079062000791c600079362000795200007
96a600079742000798b6000799a800079a9000079c1000079d6200079e82
0007a01a0007a1f00007a37e0007a4280007a4de0007a6900007a7340007
a7c20007a80e0007a85a0007a8d20007a9b00007aa2a0007aacc0007ab20
0007ac840007adb00007aec20007afc40007b08c0007b2000007b3400007
b5660007b6100007b73a0007b83e0007b9de0007baca0007bbc40007bcc2
0007bda80007bec20007c07c0007c22a0007c3980007c4100007c4840007
c5a20007c6260007c7280007c8b40007ca2c0007cb620007cc6c0007cde2
0007cf5a0007d14c0007d33a0007d5000007d5740007d6240007d6da0007
d78a0007d8480007d9420007da460007db400007dc4c0007dcd40007dd62
0007ddea0007de7e0007df5a0007e0500007e1340007e22a0007e2be0007
e37a0007e40e0007e4cc0007e5bc0007e6c40007e7c20007e8d60007e9f8
0007eb0c0007ec4c0007ed860007eea80007efbc0007f1000007f2540007
f4680007f61a0007f6ce0007f7ea0007f8c00007f9de0007fabc0007fc50
0007fd0a0007fda60007fe980007ff800008006c000800ea000801e40008
03220008044e00080482000804c6000804d600080576000806180008070e
000807fa000808d4000809ac00080b0a00080c6a00080d0800080d9e0008
0ddc00080e1c00080e5a00080e9a00080ef400080f4c00080fa60008100a
0008109600081292000812e20008140e0008149400081514000815ee0008
16c2000817c6000819b200081aca00081b3a00081bca00081c8c00081d5e
00081dca00081e4800081f9c00081fe2000820280008210c000821480008
21a6000821e4000822160008225a0008229c000822cc000100000d3500f2
003c009d000700020010002f005600000468041d0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a00e00000000300000005001800ea0000000300000006000e0102
000000030000000700ba01100000000300000008003001ca000000030000
0009008a01fa000000030000000d02aa028400010000000000000035052e
000100000000000100050563000100000000000200070568000100000000
0003002f056f00010000000000040005059e0001000000000005000c05a3
0001000000000006000705af0001000000000007005d05b6000100000000
00080018061300010000000000090045062b000100000000000d01550670
0003000104030002000c07c50003000104050002001007d1000300010406
0002000c07e10003000104070002001007ed0003000104080002001007fd
0003000104090000006a080d0003000104090001000a0877000300010409
0002000e08810003000104090003005e088f0003000104090004000a08ed
0003000104090005001808f70003000104090006000e090f000300010409
000700ba091d0003000104090008003009d70003000104090009008a0a07
000300010409000d02aa0a9100030001040a0002000c0d3b00030001040b
000200100d4700030001040c0002000c0d5700030001040e0002000c0d63
0003000104100002000e0d6f000300010413000200120d7d000300010414
0002000c0d8f000300010415000200100d9b0003000104160002000c0dab
0003000104190002000e0db700030001041b000200100dc500030001041d
0002000c0dd500030001041f0002000c0de10003000104240002000e0ded
00030001042a0002000e0dfb00030001042d0002000e0e0900030001080a
0002000c0e170003000108160002000c0e23000300010c0a0002000c0e2f
000300010c0c0002000c0e3b00a900200032003000300036002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0030
003100200028004d006900630072006f0073006f00660074002900410072
00690061006c00560065007200730069006f006e00200035002e00300031
0041007200690061006c004d00540041007200690061006c002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e00200069006e00200074
0068006500200055006e0069007400650064002000530074006100740065
007300200061006e0064002f006f00720020006f00740068006500720020
0063006f0075006e00740072006900650073002e0054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e004d006f006e006f0074007900700065002000540079
00700065002000440072006100770069006e00670020004f006600660069
006300650020002d00200052006f00620069006e0020004e006900630068
006f006c00610073002c0020005000610074007200690063006900610020
005300610075006e0064006500720073002000310039003800320059006f
00750020006d006100790020007500730065002000740068006900730020
0066006f006e007400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
006400200062007900200074006800650020006c006900630065006e0073
00650020007400650072006d007300200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c0075006400650064002e00200059006f00750020
006d006100790020006f006e006c0079002000280069002900200065006d
0062006500640020007400680069007300200066006f006e007400200069
006e00200063006f006e00740065006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
0065006d00620065006400640069006e0067002000720065007300740072
0069006300740069006f006e007300200069006e0063006c007500640065
006400200069006e0020007400680069007300200066006f006e0074003b
00200061006e006400200028006900690029002000740065006d0070006f
0072006100720069006c007900200064006f0077006e006c006f00610064
0020007400680069007300200066006f006e007400200074006f00200061
0020007000720069006e0074006500720020006f00720020006f00740068
006500720020006f00750074007000750074002000640065007600690063
006500200074006f002000680065006c00700020007000720069006e0074
00200063006f006e00740065006e0074002ea9203230303620546865204d
6f6e6f7479706520436f72706f726174696f6e2e20416c6c205269676874
732052657365727665642e417269616c526567756c61724d6f6e6f747970
653a417269616c20526567756c61723a56657273696f6e20352e30312028
4d6963726f736f667429417269616c56657273696f6e20352e3031417269
616c4d54417269616c20697320612074726164656d61726b206f66205468
65204d6f6e6f7479706520436f72706f726174696f6e20696e2074686520
556e697465642053746174657320616e642f6f72206f7468657220636f75
6e74726965732e546865204d6f6e6f7479706520436f72706f726174696f
6e4d6f6e6f7479706520547970652044726177696e67204f666669636520
2d20526f62696e204e6963686f6c61732c20506174726963696120536175
6e646572732031393832596f75206d617920757365207468697320666f6e
7420746f20646973706c617920616e64207072696e7420636f6e74656e74
206173207065726d697474656420627920746865206c6963656e73652074
65726d7320666f72207468652070726f6475637420696e20776869636820
7468697320666f6e7420697320696e636c756465642e20596f75206d6179
206f6e6c792028692920656d626564207468697320666f6e7420696e2063
6f6e74656e74206173207065726d69747465642062792074686520656d62
656464696e67207265737472696374696f6e7320696e636c756465642069
6e207468697320666f6e743b20616e6420286969292074656d706f726172
696c7920646f776e6c6f6164207468697320666f6e7420746f2061207072
696e746572206f72206f74686572206f7574707574206465766963652074
6f2068656c70207072696e7420636f6e74656e742e004e006f0072006d00
61006c006f00620079010d0065006a006e00e9006e006f0072006d006100
6c005300740061006e0064006100720064039a03b103bd03bf03bd03b903
ba03ac00a90020003200300030003600200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e002e00200041006c006c002000520069006700680074007300
2000520065007300650072007600650064002e0041007200690061006c00
52006500670075006c00610072004d006f006e006f007400790070006500
3a0041007200690061006c00200052006500670075006c00610072003a00
560065007200730069006f006e00200035002e0030003100200028004d00
6900630072006f0073006f0066007400290041007200690061006c005600
65007200730069006f006e00200035002e00300031004100720069006100
6c004d00540041007200690061006c002000690073002000610020007400
72006100640065006d00610072006b0020006f0066002000540068006500
20004d006f006e006f007400790070006500200043006f00720070006f00
72006100740069006f006e00200069006e00200074006800650020005500
6e0069007400650064002000530074006100740065007300200061006e00
64002f006f00720020006f007400680065007200200063006f0075006e00
740072006900650073002e0054006800650020004d006f006e006f007400
790070006500200043006f00720070006f0072006100740069006f006e00
4d006f006e006f0074007900700065002000540079007000650020004400
72006100770069006e00670020004f006600660069006300650020002d00
200052006f00620069006e0020004e006900630068006f006c0061007300
2c0020005000610074007200690063006900610020005300610075006e00
64006500720073002000310039003800320059006f00750020006d006100
7900200075007300650020007400680069007300200066006f006e007400
200074006f00200064006900730070006c0061007900200061006e006400
20007000720069006e007400200063006f006e00740065006e0074002000
6100730020007000650072006d0069007400740065006400200062007900
200074006800650020006c006900630065006e0073006500200074006500
72006d007300200066006f00720020007400680065002000700072006f00
6400750063007400200069006e0020007700680069006300680020007400
680069007300200066006f006e007400200069007300200069006e006300
6c0075006400650064002e00200059006f00750020006d00610079002000
6f006e006c0079002000280069002900200065006d006200650064002000
7400680069007300200066006f006e007400200069006e00200063006f00
6e00740065006e00740020006100730020007000650072006d0069007400
7400650064002000620079002000740068006500200065006d0062006500
6400640069006e0067002000720065007300740072006900630074006900
6f006e007300200069006e0063006c007500640065006400200069006e00
20007400680069007300200066006f006e0074003b00200061006e006400
200028006900690029002000740065006d0070006f007200610072006900
6c007900200064006f0077006e006c006f00610064002000740068006900
7300200066006f006e007400200074006f00200061002000700072006900
6e0074006500720020006f00720020006f00740068006500720020006f00
750074007000750074002000640065007600690063006500200074006f00
2000680065006c00700020007000720069006e007400200063006f006e00
740065006e0074002e004e006f0072006d0061006c004e006f0072006d00
610061006c0069004e006f0072006d0061006c004e006f0072006d00e100
6c004e006f0072006d0061006c0065005300740061006e00640061006100
720064004e006f0072006d0061006c004e006f0072006d0061006c006e00
79004e006f0072006d0061006c041e0431044b0447043d044b0439004e00
6f0072006d00e1006c006e0065004e006f0072006d0061006c004e006f00
72006d0061006c004e0061007600610064006e006f0074006801b001a103
00006e00670041007200720075006e00740061004e006f0072006d006100
6c004e006f0072006d0061006c004e006f0072006d0061006c004e006f00
72006d0061006c000000b900540328b326181fd0bc032900e00329000203
29b22b1d1fb90327031db23b1f40b80323b31215320f412d03200001002f
0320000100200320006f032000af032000bf03200004005f031e00010010
031e007f031e0080031e00af031e00bf031e00d0031e00060000031e0010
031e0020031e006f031e009f031e00e0031e0006031d031cb2201f104127
0319007f03190002000f031700ef031700ff03170003001f0317002f0317
004f0317005f0317008f0317009f03170006000f0317005f0317006f0317
007f031700bf031700f00317000600400317b2923340b80317b28b3340b8
0317b36a6c3240b80317b2613340b80317b35c5d3240b80317b357593240
b80317b34d513240b80317b344493240b80317b23a3340b80317b3313432
40b80317b32e423240b80317b3272c3240b80317b312253280b80317b30a
0d32c04116031600d00316000200700316000102c4000f0101001f00a003
1500b0031500020306000f0101001f00400312b32426329fbf0304000103
0203010064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed00
64001fffc002edb30e11329f414a02e200af02e200bf02e2000302e202e2
02e102e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e0
00ef02e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd
005f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc00010000
02dc0001001002dc003f02dc000202dc02dc001002db000102db02db000f
02da000102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3
b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb9
0326031cb23b1f40bb0322003e00330322b225311fb80318b23c691fb802
e3b3202b1fa0413002d400b002d40002000002d4001002d4002002d40050
02d4006002d4007002d40006006002d6007002d6008002d6009002d600a0
02d600b002d60006000002d6001002d6002002ca002002cc002002d60030
02d6004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02
c70017001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02
c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002
c7002f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f
02bf004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca
0800001f02b200e90800001f02a600a20800406a1f402643493240204349
3240263a3d3240203a3d329f209f26024026969932402096993240268e92
3240208e92324026848c324020848c3240267a813240207a813240266c76
3240206c76324026646a324020646a3240265a5f3240205a5f3240264f54
3240204f5432b8029eb724271f374f6b0120410f02770030027700400277
00500277000402770277027700f90400001f029bb22a2a1fb8029a402b29
2a1f80ba0180bc0180520180a201806501807e01808101803c01805e0180
2b01801c01801e0180400180bb0138000100800140b40180400180bb0138
00010080013940180180ca0180ad01807301802601802501802401802001
3740b80221b2493340b80221b2453340b80221b341423240b80221b33d3e
320f410f0221003f0221007f0221000300bf022100cf022100ff02210003
00400221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e
3a326f414802c3007f02c3008f02c300df02c30004002f02c3006002c300
cf02c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c300
0600df02220001008f02220001000f0222002f0222003f0222005f022200
7f022200ef0222000600bf022100ef02210002006f0221007f022100af02
210003002f0221003f0221004f0221000302c302c3022202220221022140
1d101c102b1048038f1c010f1e014f1eff1e023700161600000012110811
b8010db6f70df8f70d00094109028e028f001d001f0290028f001d001f02
8fb2f91d1fb80198b226bb1f41150197001e0401001f013900260125001f
013800730401001f0135001c0801001f0134001c02ab001f0132b21c561f
b8010fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb
1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b801
01b21fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26
b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f
1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab2
1f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f
231eb80401b21f5537b80168402c07960758074f07360732072c0721071f
071d071b071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807
ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ff
b101018e851bb0124358b900010111858d1bb900010128858d5959001816
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901
f201f04544b901f101f045445958b9033e01f2455258b901f2033e445959
4bb8015653205c58b9002001f14544b9002601f145445958b9081e002045
5258b90020081e4459594bb8019a53205c58b9002501f24544b9002401f2
45445958b909090025455258b9002509094459594bb8040153205c58b173
244544b1242445445958b917200073455258b9007317204459594bb80401
53205c58b1ca254544b1252545445958b9168000ca455258b900ca168044
59594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9
001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b9018900
1c455258b9001c01894459594bb8030153205c58b11c1c4544b11c1c4544
5958b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65
422b2b01b33b59635c456523456023456560234560b08b766818b0806220
20b163594565234520b003266062636820b003266165b059236544b06323
4420b13b5c4565234520b003266062636820b003266165b05c236544b03b
2344b1005c455458b15c406544b23b403b4523614459b347503437456523
456023456560234560b089766818b080622020b134504565234520b00326
6062636820b003266165b050236544b034234420b147374565234520b003
266062636820b003266165b037236544b0472344b10037455458b1374065
44b24740474523614459004b5342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b0112342002b7475737500184569444569444569447373737374
757374752b2b2b2b74752b2b2b2b2b737373737373737373737373737373
737373737373737373732b2b2b45b0406144737400004bb02a534bb03f51
5a58b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc060
4459004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c
515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b
5402b0124b545ab012435c5a58ba009f02220001007359002b7473012b01
732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b2b0045694473
456944734569447374754569447345694445694445694473744569444569
44732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b73
7475732b7374757374752b2b2b742b2b000000>
[15785 15901 16277 16325 16277 16273 15933 16169 16277 15721 16361 15561 15973
16029 16305 15693 16345 16249 15893 15629 16365 15481 16245 16249 16357 16337
15821 15749 16345 15937 16257 16033 19077 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 8014 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>ArialMT AddT42Char 
3 9454 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>ArialMT AddT42Char 
3 10468 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>ArialMT AddT42Char 
3 10918 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>ArialMT AddT42Char 
3 11776 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>ArialMT AddT42Char 
3 12974 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>ArialMT AddT42Char 
4 15558 169 <00020086004803df03d80005000b0084400b09030d0919031d09040a04b8
01cb400b080208f907070bf90a7506b8ffc0b3191c3406b8ffc0401b0f11
3406ae0940191c3409400e1134099f0002e8013a05f9047500b8ffc0b319
1c3400b8ffc040120f113400ae0003100320030303ac0caf79182b10f65d
fd2b2bf6fdf4ed10f62b2bfd2b2bf6fd3c10fd002f3cfd3c3130015d0101
230101331301230101330154010392fec1013f947e010898fec701399802
10fe3801c801c8fe38fe3801c801c800>ArialMT AddT42Char 
4 15754 170 <0002008c004803e503d80005000b0080400b0603020916031209040107b8
01cb4018050b0a08f907070bf90a750640191c3406400f113406ae09b8ff
c0b3191c3409b8ffc040230e1134099f0002f9013a05e804750040191c34
00400f113400ae0f031f030203ac0d9db9018600182b10f65dfd2b2bf6fd
f4ed10f62b2bfd2b2bf6fd3c10ed10002f3cf63c3130015d010133010123
0301330101230317fefb94013ffec1937ffef897013afec697021001c8fe
38fe3801c801c8fe38fe3800>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/i 76 def
/m 80 def
/o 82 def
/p 83 def
/r 85 def
/t 87 def
/guillemotleft 169 def
/guillemotright 170 def
end
ArialMT /Encoding get
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 171 /guillemotleft put
dup 187 /guillemotright put
pop
end
%ADOEndSubsetFont
reset_gvm
/AWWROC+ArialMT /ArialMT findfont ct_VMDictPut
/AWWROC+ArialMT*1 
[105{/.notdef}rp /i 3{/.notdef}rp /m /.notdef /o /p /.notdef 
/r /.notdef /t 54{/.notdef}rp /guillemotleft 15{/.notdef}rp /guillemotright 68{/.notdef}rp]
AWWROC+ArialMT nf
AWWROC+ArialMT*1 [7.2 0 0 -7.2 0 0 ]msf
347.04 211.242 mo
(\253import\273)
[4.00751 1.60272 6.00186 4.00754 4.00751 2.40189 2.00592 0 ]xsh
0 lc
[3.6 2.16 ] 0 dsh
317.52 100.422 mo
312.48 100.422 li
@
310.32 100.422 mo
305.28 100.422 li
@
303.12 100.422 mo
298.08 100.422 li
@
295.92 100.422 mo
290.88 100.422 li
@
288.72 100.422 mo
283.68 100.422 li
@
2 lc
[] 0 dsh
282.24 100.422 mo
293.04 96.822 li
@
282.24 100.422 mo
293.04 104.022 li
@
286.56 109.902 mo
314.7 109.902 li
314.7 101.862 li
286.56 101.862 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
f
0 gry
AWWROC+ArialMT*1 [7.2 0 0 -7.2 0 0 ]msf
286.56 108.282 mo
(\253import\273)
[4.00751 1.60272 6.00186 4.00754 4.00751 2.40186 2.00592 0 ]xsh
0 lc
[3.6 2.16 ] 0 dsh
235.44 122.742 mo
235.44 127.782 li
@
235.44 129.942 mo
235.44 134.982 li
@
235.44 137.142 mo
235.44 142.182 li
@
235.44 144.342 mo
235.44 149.382 li
@
235.44 151.542 mo
235.44 156.582 li
@
2 lc
[] 0 dsh
235.44 156.582 mo
231.84 145.782 li
@
235.44 156.582 mo
239.04 145.782 li
@
221.04 139.422 mo
249.18 139.422 li
249.18 131.382 li
221.04 131.382 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
f
0 gry
AWWROC+ArialMT*1 [7.2 0 0 -7.2 0 0 ]msf
221.04 137.802 mo
(\253import\273)
[4.00752 1.60272 6.00186 4.00752 4.00751 2.40187 2.00592 0 ]xsh
0 lc
[3.6 2.16 ] 0 dsh
393.84 143.622 mo
393.84 148.662 li
@
393.84 150.822 mo
393.84 155.862 li
@
393.84 158.022 mo
393.84 163.062 li
@
393.84 165.222 mo
393.84 170.262 li
@
393.84 172.422 mo
393.84 177.462 li
@
393.84 179.622 mo
393.84 184.662 li
@
392.4 185.382 mo
387.36 185.382 li
@
385.2 185.382 mo
380.16 185.382 li
@
378 185.382 mo
372.96 185.382 li
@
370.8 185.382 mo
365.76 185.382 li
@
363.6 185.382 mo
358.56 185.382 li
@
356.4 185.382 mo
351.36 185.382 li
@
349.2 185.382 mo
344.16 185.382 li
@
342 185.382 mo
336.96 185.382 li
@
334.8 185.382 mo
329.76 185.382 li
@
327.6 185.382 mo
322.56 185.382 li
@
320.4 185.382 mo
315.36 185.382 li
@
313.2 185.382 mo
308.16 185.382 li
@
306 185.382 mo
300.96 185.382 li
@
298.8 185.382 mo
293.76 185.382 li
@
291.6 185.382 mo
286.56 185.382 li
@
284.4 185.382 mo
282.96 185.382 li
@
2 lc
[] 0 dsh
282.96 185.382 mo
293.76 181.782 li
@
282.96 185.382 mo
293.76 188.982 li
@
324.72 194.862 mo
352.86 194.862 li
352.86 186.822 li
324.72 186.822 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.98824 .94902 .8902 colr
f
0 gry
AWWROC+ArialMT*1 [7.2 0 0 -7.2 0 0 ]msf
324.72 193.242 mo
(\253import\273)
[4.00751 1.60272 6.00186 4.00754 4.00751 2.40189 2.00592 0 ]xsh
gsave
0 -77.398 mo
595.02 -77.398 li
595.02 -77.3583 li
0 -77.3583 li
cp
clp
.06 lw
0 -77.418 mo
595.44 -77.418 li
@
grestore
gsave
0 764.322 mo
595.02 764.322 li
595.02 764.262 li
0 764.262 li
cp
clp
.06 lw
595.44 764.262 mo
0 764.262 li
@
grestore
.06 lw
0 764.262 mo
0 -77.4183 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
true set_gvm
/AWWROB+Arial-BoldMT*1 uf
/AWWROB+Arial-BoldMT uf
/Arial-BoldMT uf
/AWWROC+ArialMT*1 uf
/AWWROC+ArialMT uf
/ArialMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
